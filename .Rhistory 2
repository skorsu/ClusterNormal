rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(10, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(50, K)
b_sigma_vec <- rep(50, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
result$assign
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(10, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(1, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(100, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(500, K)
b_sigma_vec <- rep(500, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(1, K)
mu0_vec <- rep(100, K)
a_sigma_vec <- rep(500, K)
b_sigma_vec <- rep(500, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
salso(result$assign[-(1:2000), ])
result$alpha
result$alpha[9995:10000, ]
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(0.01, K)
b_sigma_vec <- rep(0.01, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
result$alpha[9995:10000, ]
salso(result$assign[-(1:2000), ])
hist(rgamma(1000, 0.01, 0.01))
hist(1/rgamma(1000, 0.01, 0.01))
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(100, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(0.01, K)
b_sigma_vec <- rep(0.01, K)
lambda_vec <- rep(100, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
result$alpha[9995:10000, ]
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(100, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(0.01, K)
b_sigma_vec <- rep(0.01, K)
lambda_vec <- rep(0.01, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
result$alpha[9995:10000, ]
salso(result$assign[-(1:2000), ])
hist(1/rgamma(1000, 50, 1000))
hist(1/rgamma(1000, 1000, 50))
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(50, K)
b_sigma_vec <- rep(1000, K)
lambda_vec <- rep(0.01, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
result$alpha[9995:10000, ]
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(500, K)
b_sigma_vec <- rep(1000, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
result$alpha[9995:10000, ]
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 1
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(500, K)
b_sigma_vec <- rep(500, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
result$alpha[9995:10000, ]
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 1
xi <- rep(1, K)
mu0_vec <- rep(25000, K)
a_sigma_vec <- rep(0.01, K)
b_sigma_vec <- rep(0.01, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
result$alpha[9995:10000, ]
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 1
xi <- rep(1, K)
mu0_vec <- rep(25000, K)
a_sigma_vec <- rep(1000, K)
b_sigma_vec <- rep(1000, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
result$alpha[9995:10000, ]
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 1
xi <- rep(1, K)
mu0_vec <- rep(25000, K)
a_sigma_vec <- rep(10000, K)
b_sigma_vec <- rep(10000, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 1
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(100, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, scale(galaxy$speed), xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
salso(result$assign[-(1:2000), ])
scale(galaxy$speed)
hist(1/rgamma(1000, 100, 100))
### Required Library: ----------------------------------------------------------
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(LaplacesDemon)
library(mvtnorm)
library(DirichletReg)
library(salso)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
set.seed(20882)
data_test <- c(rnorm(3, -5, 1), rnorm(2, 10, 1))
## Analysis
K <- 5
xi <- rep(1, K)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
normal_SPMM_uni(data_test, xi, mu0_vec, a_sigma_vec, b_sigma_vec, lambda_vec,
1000, 100)
## Analysis
xi <- c(1, 1, 0.01, 0.01, 0.01)
normal_SPMM_uni(data_test, xi, mu0_vec, a_sigma_vec, b_sigma_vec, lambda_vec,
1000, 100)
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
### SPMM: ----------------------------------------------------------------------
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(3, -5, 1), rnorm(2, 10, 1))
## Analysis
xi <- c(1, 1, 0.01, 0.01, 0.01)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
normal_SPMM_uni(data_test, xi, mu0_vec, a_sigma_vec, b_sigma_vec, lambda_vec,
1000, 100)
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
### SPMM: ----------------------------------------------------------------------
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(3, -5, 1), rnorm(2, 10, 1))
## Analysis
xi <- c(1, 1, 0.01, 0.01, 0.01)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
normal_SPMM_uni(data_test, xi, mu0_vec, a_sigma_vec, b_sigma_vec, lambda_vec,
1000, 100)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
### SPMM: ----------------------------------------------------------------------
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(3, -5, 1), rnorm(2, 10, 1))
## Analysis
xi <- c(1, 1, 0.01, 0.01, 0.01)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
normal_SPMM_uni(data_test, xi, mu0_vec, a_sigma_vec, b_sigma_vec, lambda_vec,
1000, 100)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(3, -5, 1), rnorm(2, 10, 1))
## Analysis
xi <- c(1, 1, 0.01, 0.01, 0.01)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
normal_SPMM_uni(data_test, xi, mu0_vec, a_sigma_vec, b_sigma_vec, lambda_vec,
1000, 100)
### SPMM: ----------------------------------------------------------------------
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(3, -5, 1), rnorm(2, 10, 1))
## Analysis
xi <- c(1, 1, 0.1, 1, 1)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- rep(1, 5)
normal_SPMM_uni(data_test, xi, mu0_vec, a_sigma_vec, b_sigma_vec, lambda_vec,
1000, 100)
### SPMM: ----------------------------------------------------------------------
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(3, -5, 1), rnorm(2, 10, 1))
## Analysis
xi <- c(1, 1, 1, 1, 1)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- rep(1, 5)
normal_SPMM_uni(data_test, xi, mu0_vec, a_sigma_vec, b_sigma_vec, lambda_vec,
1000, 100)
### SPMM: ----------------------------------------------------------------------
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(100, -5, 1), rnorm(100, 10, 1))
## Analysis
xi <- c(1, 1, 1, 1, 1)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- rep(1, 5)
normal_SPMM_uni(data_test, xi, mu0_vec, a_sigma_vec, b_sigma_vec, lambda_vec,
1000, 100)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
compileAttributes()
build()
install()
library(ClusterNormal)
### Required Library: ----------------------------------------------------------
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(LaplacesDemon)
library(mvtnorm)
library(DirichletReg)
library(salso)
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(3, -5, 1), rnorm(2, 10, 1))
set.seed(20882)
data_test <- c(rnorm(3, -5, 1), rnorm(2, 10, 1))
## Analysis
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
ldata_mat <- uni_lmar(K, data_test, a_sigma_vec,
b_sigma_vec, lambda_vec, mu0_vec)
ldata_mat
uni_expand(K, c(1,1,1,2,2), rep(1, 5), xi, data_test, ldata_mat, 1, 1)
uni_expand(K, c(1,1,1,2,2), rep(1, 5), xi, data_test, ldata_mat, 1, 1)
uni_expand(K, c(1,1,1,2,2), rep(1, 5), xi, data_test, ldata_mat, 1, 1)
uni_expand(K, c(1,1,1,2,2), rep(1, 5), xi, data_test, ldata_mat, 1, 1)
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
uni_expand(K, c(1,1,1,2,2), rep(1, 5), xi, data_test, ldata_mat, 1, 1)
(K, c(1,1,1,2,2), rep(1, 5), xi, data_test, ldata_mat, 1, 1)
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
knitr::opts_chunk$set(echo = TRUE)
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(LaplacesDemon)
library(salso)
library(tidyverse)
library(ggplot2)
library(mvtnorm)
library(msBP)
library(ClusterNormal)
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(250, -10, 1), rnorm(250, 10, 1))
data.frame(x = data_test, y = c(rep(1, 250), rep(2, 250))) %>%
ggplot(aes(x = x, fill = factor(y))) +
geom_histogram(bins = 30) +
theme_bw()
## Analysis
K <- 10
K_init <- 1
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(500, K)
b_sigma_vec <- rep(250, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, data_test, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 1, 1, 10, 10000, 1000)
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
rm(list = ls())
set.seed(20882)
data_test <- c(rnorm(250, -10, 1), rnorm(250, 10, 1))
K <- 10
K_init <- 1
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(500, K)
b_sigma_vec <- rep(250, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, data_test, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 1, 1, 10, 10000, 1000)
Sys.time() - start_time
result
result$CE_accept
mean(result$CE_accept)
mean(result$SM_accept)
mean(result$CE_accept)
mean(result$SM_accept)
print("Hello World!")
