}
dat <- data.frame(data_sim, clus_actual)
### Hyperparameter
K <- 500
K_init <- 5
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(3, K)
b_sigma_vec <- rep(2, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, sort(scale(dat$data_sim)), xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 1, 1, 10, 10000, 1000)
Sys.time() - start_time
table(summary(salso(result$assign[-(1:5000), ]))$estimate)
set.seed(2)
prob_assign <- runif(500)
data_sim <- rep(NA, 500)
clus_actual <- rep(NA, 500)
for(i in 1:500){
if(prob_assign[i] <= 0.2){
data_sim[i] <- rnorm(1, -2, 5)
clus_actual[i] <- 1
} else if(prob_assign[i] <= 0.4){
data_sim[i] <- rnorm(1, -1, 4)
clus_actual[i] <- 2
} else if(prob_assign[i] <= 0.6){
data_sim[i] <- rnorm(1, 0, 3)
clus_actual[i] <- 3
} else if(prob_assign[i] <= 0.8){
data_sim[i] <- rnorm(1, 1, 2)
clus_actual[i] <- 4
} else {
data_sim[i] <- rnorm(1, 2, 1)
clus_actual[i] <- 5
}
}
dat <- data.frame(data_sim, clus_actual)
### Hyperparameter
K <- 500
K_init <- 5
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(3, K)
b_sigma_vec <- rep(2, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, scale(dat$data_sim), xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 1, 1, 10, 10000, 1000)
Sys.time() - start_time
table(summary(salso(result$assign[-(1:5000), ]))$estimate)
### Required Library: ----------------------------------------------------------
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(LaplacesDemon)
library(mvtnorm)
library(tidyverse)
library(DirichletReg)
library(salso)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
set.seed(20882)
data_test <- c(rnorm(10, -5, 1), rnorm(5, 10, 1))
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
set.seed(20882)
data_test <- c(rnorm(10, -5, 1), rnorm(5, 10, 1))
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
ci_actual <- rep(c(1, 2, 5), 5)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_k_vec,
mu_0_vec)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu_0_vec
)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
ci_actual
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
set.seed(20882)
data_test <- c(rnorm(10, -5, 1), rnorm(5, 10, 1))
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
ci_actual <- rep(c(1, 2, 5), 5)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
data_test
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
data_test
set.seed(20882)
data_test <- c(rnorm(5, -5, 1), rnorm(5, 10, 1), rnorm(5, 50, 1))
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
ci_actual <- sort(rep(c(1, 2, 5), 5))
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
sample(c(2, 3, 5), 15, TRUE)
set.seed(20882)
data_test <- c(rnorm(5, -5, 1), rnorm(5, 10, 1), rnorm(5, 50, 1))
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
ci_actual <- sample(c(2, 3, 5), 15, TRUE)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
### Test (3/7/2023): -----------------------------------------------------------
set.seed(20882)
data_test <- c(rnorm(5, -5, 1), rnorm(5, 10, 1), rnorm(5, 50, 1))
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
ci_actual <- sample(c(2, 3, 5), 15, TRUE)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
set.seed(20882)
data_test <- c(rnorm(5, -5, 1), rnorm(5, 10, 1), rnorm(5, 50, 1))
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
ci_actual <- sample(c(2, 3, 5), 15, TRUE)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
table(ci_actula)
table(ci_actual)
uninstall()
compileAttributes()
build()
compileAttributes()
build()
install()
library(ClusterNormal)
### Test (3/7/2023): -----------------------------------------------------------
set.seed(20882)
data_test <- c(rnorm(5, -5, 1), rnorm(5, 10, 1), rnorm(5, 50, 1))
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
ci_actual <- sample(c(2, 3, 5), 15, TRUE)
table(ci_actual)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
### Test (3/7/2023): -----------------------------------------------------------
set.seed(20882)
data_test <- c(rnorm(5, -5, 1), rnorm(5, 10, 1), rnorm(5, 50, 1))
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
ci_actual <- sample(c(2, 3, 5), 15, TRUE)
table(ci_actual)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
gamma(a_sigma_vec)
log(gamma(a_sigma_vec))
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
### Test (3/7/2023): -----------------------------------------------------------
set.seed(20882)
data_test <- c(rnorm(5, -5, 1), rnorm(5, 10, 1), rnorm(5, 50, 1))
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
ci_actual <- sample(c(2, 3, 5), 15, TRUE)
table(ci_actual)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
set.seed(20882)
data_test <- c(rnorm(5, -5, 1), rnorm(5, 10, 1), rnorm(5, 50, 1))
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5
a_sigma_vec <- 1:5
b_sigma_vec <- 1:5
lambda_vec <- 25:29
ci_actual <- sample(c(2, 3, 5), 15, TRUE)
table(ci_actual)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
### Test (3/7/2023): -----------------------------------------------------------
set.seed(20882)
data_test <- c(rnorm(5, 100, 1), rnorm(5, 0, 1), rnorm(5, -100, 1))
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5
a_sigma_vec <- 1:5
b_sigma_vec <- 1:5
lambda_vec <- 25:29
ci_actual <- sample(c(2, 3, 5), 15, TRUE)
table(ci_actual)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
### Test (3/7/2023): -----------------------------------------------------------
set.seed(20882)
data_test <- c(rnorm(5, -1, 1), rnorm(5, 0, 1), rnorm(5, 1, 1))
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5
a_sigma_vec <- 1:5
b_sigma_vec <- 1:5
lambda_vec <- 25:29
ci_actual <- sample(c(2, 3, 5), 15, TRUE)
table(ci_actual)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
### Test (3/7/2023): -----------------------------------------------------------
set.seed(20882)
data_test <- c(rnorm(50, -1, 1), rnorm(50, 0, 1), rnorm(50, 1, 1))
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5
a_sigma_vec <- 1:5
b_sigma_vec <- 1:5
lambda_vec <- 25:29
ci_actual <- sample(c(2, 3, 5), 150, TRUE)
table(ci_actual)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
table(ci_actual)
gamma(a_sigma_vec)
lgamma(a_sigma_vec)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
### Test (3/7/2023): -----------------------------------------------------------
set.seed(20882)
data_test <- c(rnorm(50, -1, 1), rnorm(50, 0, 1), rnorm(50, 1, 1))
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5
a_sigma_vec <- 1:5
b_sigma_vec <- 1:5
lambda_vec <- 25:29
ci_actual <- sample(c(2, 3, 5), 150, TRUE)
table(ci_actual)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
set.seed(20882)
data_test <- c(rnorm(50, -1, 1), rnorm(50, 0, 1), rnorm(50, 1, 1))
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5
a_sigma_vec <- rep(1, 5)
b_sigma_vec <- rep(1, 5)
lambda_vec <- 25:29
ci_actual <- sample(c(2, 3, 5), 150, TRUE)
table(ci_actual)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
### Test (3/7/2023): -----------------------------------------------------------
set.seed(20882)
data_test <- c(rnorm(50, -1, 1), rnorm(50, 0, 1), rnorm(50, 1, 1))
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5
a_sigma_vec <- rep(1, 5)
b_sigma_vec <- rep(1, 5)
lambda_vec <- 25:29
ci_actual <- sample(c(2, 3, 5), 150, TRUE)
table(ci_actual)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
lgamma(a_sigma_vec)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec,
mu0_vec)
ci_actual <- sample(c(2, 3, 5), 150, TRUE)
set.seed(20882)
data_test <- c(rnorm(50, -1, 1), rnorm(50, 0, 1), rnorm(50, 1, 1))
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5
a_sigma_vec <- rep(1, 5)
b_sigma_vec <- rep(1, 5)
lambda_vec <- 25:29
ci_actual <- sample(c(2, 3, 5), 150, TRUE)
ci_new <- sample(c(2, 3, 5), 150, TRUE)
table(ci_actual)
table(ci_new)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec, mu0_vec) -
uni_lmar_vec(data_test, ci_new, a_sigma_vec, b_sigma_vec, lambda_vec, mu0_vec)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec, mu0_vec) -
uni_lmar_vec(data_test, ci_new, a_sigma_vec, b_sigma_vec, lambda_vec, mu0_vec)
log(runif(1))
log(runif(1))
log(runif(1))
log(runif(1))
log(runif(1))
log(runif(1))
log(runif(1))
ci_actual <- sample(c(2, 3, 5), 150, TRUE)
ci_new <- sample(c(1, 2, 3, 5), 150, TRUE)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec, mu0_vec) -
uni_lmar_vec(data_test, ci_new, a_sigma_vec, b_sigma_vec, lambda_vec, mu0_vec)
set.seed(20882)
data_test <- c(rnorm(50, -1, 1), rnorm(50, 0, 1), rnorm(50, 1, 1))
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- 1:5
a_sigma_vec <- rep(1, 5)
b_sigma_vec <- rep(1, 5)
lambda_vec <- 25:29
ci_actual <- sample(c(2, 3, 5), 150, TRUE)
ci_new <- sample(c(1, 2, 3, 5), 150, TRUE)
table(ci_actual)
table(ci_new)
uni_lmar_vec(data_test, ci_actual, a_sigma_vec, b_sigma_vec, lambda_vec, mu0_vec) -
uni_lmar_vec(data_test, ci_new, a_sigma_vec, b_sigma_vec, lambda_vec, mu0_vec)
uni_split_merge_new(K, ci_actual, c(0, 1, 1, 0, 1), xi, data_test, mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, 1, 1, 10)
uni_split_merge_new(K, ci_actual, c(0, 1, 1, 0, 1), xi, data_test, mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, 1, 1, 10)
uni_split_merge_new(K, ci_actual, c(0, 1, 1, 0, 1), xi, data_test, mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, 1, 1, 10)
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
uni_split_merge_new(K, ci_actual, c(0, 1, 1, 0, 1), xi, data_test, mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, 1, 1, 10)
uni_split_merge_new(K, ci_actual, c(0, 0.25, 0.1, 0, 0.8), xi, data_test, mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, 1, 1, 10)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
uni_split_merge_new(K, ci_actual, c(0, 0.25, 0.1, 0, 0.8), xi, data_test, mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, 1, 1, 10)
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
uni_split_merge_new(K, ci_actual, c(0, 0.25, 0.1, 0, 0.8), xi, data_test, mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, 1, 1, 10)
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
uni_split_merge_new(K, ci_actual, c(0, 0.25, 0.1, 0, 0.8), xi, data_test, mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, 1, 1, 10)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
uni_split_merge_new(K, ci_actual, c(0, 0.25, 0.1, 0, 0.8), xi, data_test, mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, 1, 1, 10)
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
table(ci_actual)
uni_split_merge_new(K, ci_actual, c(0, 0.25, 0.1, 0, 0.8), xi, data_test, mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, 1, 1, 10)
ci_actual[c(78, 134) + 1]
uni_split_merge_new(K, ci_actual, c(0, 0.25, 0.1, 0, 0.8), xi, data_test, mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, 1, 1, 10)
uni_split_merge_new(K, ci_actual, c(0, 0.25, 0.1, 0, 0.8), xi, data_test, mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, 1, 1, 10)
uni_split_merge_new(K, ci_actual, c(0, 0.25, 0.1, 0, 0.8), xi, data_test, mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, 1, 1, 10)
ci_actual[c(10, 15) + 1]
table(ci_actual)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
compileAttributes()
build()
compileAttributes()
build()
compileAttributes()
build()
compileAttributes()
build()
