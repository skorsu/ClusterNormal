sample(1:5, 100, TRUE)
set.seed(31807)
sample(1:5, 100, TRUE)
?rinvgamma
??rinvgamma
### Required Library: ----------------------------------------------------------
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(LaplacesDemon)
library(DirichletReg)
library(salso)
6:2
a_sigma <- (2:6)/2
b_sigma <- (6:2)/2
### Univariate: ----------------------------------------------------------------
#### Data Simulation
rm(list = ls())
rm(list = ls())
set.seed(31807)
ci <- sample(1:5, 100, TRUE)
a_sigma <- (2:6)/2
b_sigma <- (6:2)/2
rinvgamma(5, a_sigma, 1/b_sigma)
0.01:0.05
(1:5)/100
data_test <- rep(NA, 100)
rm(list = ls())
set.seed(31807)
ci <- sample(1:5, 100, TRUE)
a_sigma <- (2:6)/2
b_sigma <- (6:2)/2
sigma2_vec <- rinvgamma(5, a_sigma, 1/b_sigma)
lambda_vec <- (1:5)/100
mu0_vec <- c(10, 20, 30, 40, 50)
data_test <- rep(NA, 100)
rm(list = ls())
set.seed(31807)
ci <- sample(1:5, 100, TRUE)
a_sigma <- (2:6)/2
b_sigma <- (6:2)/2
sigma2_vec <- rinvgamma(5, a_sigma, 1/b_sigma)
lambda_vec <- (1:5)/100
mu0_vec <- c(10, 20, 30, 40, 50)
data_test <- rep(NA, 100)
for(i in 1:100){
data_test[i] <- rnorm(1, mu0_vec[ci[i]],
sqrt(sigma2_vec[ci[i]]/lambda_vec[ci[i]]))
}
data_test
plot(data_test)
plot(sort(data_test))
rm(list = ls())
set.seed(31807)
ci <- sample(1:5, 100, TRUE)
a_sigma <- (2:6)/2
b_sigma <- (6:2)/2
sigma2_vec <- rinvgamma(5, a_sigma, 1/b_sigma)
lambda_vec <- (1:5)/100
mu0_vec <- c(10, 30, 50, 70, 90)
data_test <- rep(NA, 100)
for(i in 1:100){
data_test[i] <- rnorm(1, mu0_vec[ci[i]],
sqrt(sigma2_vec[ci[i]]/lambda_vec[ci[i]]))
}
plot(sort(data_test))
### Required Library: ----------------------------------------------------------
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(LaplacesDemon)
library(DirichletReg)
library(salso)
compileAttributes()
build()
install()
library(ClusterNormal)
View(log_marginal_univariate)
log_marginal_univariate(data_test[1], a_sigma[1], b_sigma[1],
lambda_vec[1], mu0_vec[1])
log_marginal_univariate(data_test[10], a_sigma[1], b_sigma[1],
lambda_vec[1], mu0_vec[1])
ci
log_marginal_univariate(data_test[3], a_sigma[1], b_sigma[1],
lambda_vec[1], mu0_vec[1])
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
force(expand_step)
expand_step_univariate(5, rep(1:4, 25), c(10, 10, 10, 10, 0),
rep(1, 5),data_test, mu0_vec, a_sigma, b_sigma,
lambda_vec, 10, 10)
expand_step_univariate(5, rep(1:4, 25), c(10, 10, 10, 10, 0),
rep(1, 5),data_test, mu0_vec, a_sigma, b_sigma,
lambda_vec, 10, 10)
