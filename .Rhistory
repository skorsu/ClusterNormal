compileAttributes()
build()
install()
library(ClusterNormal)
force(expand_step)
expand_step_univariate(5, rep(1:4, 25), c(10, 10, 10, 10, 0),
rep(1, 5),data_test, mu0_vec, a_sigma, b_sigma,
lambda_vec, 10, 10)
expand_step_univariate(5, rep(1:4, 25), c(10, 10, 10, 10, 0),
rep(1, 5),data_test, mu0_vec, a_sigma, b_sigma,
lambda_vec, 10, 10)
### Required Library: ----------------------------------------------------------
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(LaplacesDemon)
library(DirichletReg)
library(salso)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
rm(list = ls())
set.seed(31807)
ci <- sample(1:5, 100, TRUE)
a_sigma <- (2:6)/2
b_sigma <- (6:2)/2
sigma2_vec <- rinvgamma(5, a_sigma, 1/b_sigma)
lambda_vec <- (1:5)/100
mu0_vec <- c(10, 30, 50, 70, 90)
data_test <- rep(NA, 100)
for(i in 1:100){
data_test[i] <- rnorm(1, mu0_vec[ci[i]],
sqrt(sigma2_vec[ci[i]]/lambda_vec[ci[i]]))
}
log_marginal_univariate(data_test[3], a_sigma[1], b_sigma[1],
lambda_vec[1], mu0_vec[1])
expand_step_univariate(5, rep(1:4, 25), c(10, 10, 10, 10, 0),
rep(1, 5),data_test, mu0_vec, a_sigma, b_sigma,
lambda_vec, 10, 10)
ci_test <- rep(1:4, 25)
xi <- rep(5, 5)
log_allocate_prob_univariate(0, ci_test, xi, data_test, a_sigma, b_sigma,
lambda_vec, mu0_vec, c(1, 2, 3, 4))
log_allocate_prob_univariate(15, ci_test, xi, data_test, a_sigma, b_sigma,
lambda_vec, mu0_vec, c(1, 2, 3, 4))
log_allocate_prob_univariate(80, ci_test, xi, data_test, a_sigma, b_sigma,
lambda_vec, mu0_vec, c(1, 2, 3, 4))
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
alpha_test <- c(10, 10, 10, 10, 0)
cluster_assign_univariate(5, ci_test, xi, y, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda)
cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda)
cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec)
cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec)
#### Test the function: --------------------------------------------------------
##### Initial: all observation come from the same cluster
##### (K_+ = 1, c = rep(1, 100))
set.seed(20882)
cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec)
cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec)
table(cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec))
table(cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec)$new_assign)
table(cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec)$new_assign)
table(cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec)$new_assign)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
table(cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec)$new_assign)
table(cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec)$new_assign)
table(cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec)$new_assign)
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
table(cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec)$new_assign)
table(cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec)$new_assign)
table(cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec)$new_assign)
table(cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec)$new_assign)
table(cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec)$new_assign)
log_allocate_prob_univariate(80, rep(1:2, 50), xi, data_test, a_sigma, b_sigma,
lambda_vec, mu0_vec, c(1, 2, 3, 4))
log_allocate_prob_univariate(80, rep(1:2, 50), xi, data_test, a_sigma, b_sigma,
lambda_vec, mu0_vec, c(1, 2))
log_allocate_prob_univariate(80, rep(1:2, 50), xi, data_test, a_sigma, b_sigma,
lambda_vec, mu0_vec, c(1, 2, 3))
log_allocate_prob_univariate(80, rep(1:2, 50), xi, data_test, a_sigma, b_sigma,
lambda_vec, mu0_vec, c(1, 2, 3, 4))
log_allocate_prob_univariate(80, rep(1:2, 50), xi, data_test, a_sigma, b_sigma,
lambda_vec, mu0_vec, c(1, 2, 3, 4, 5))
log_allocate_prob_univariate(80, rep(3:4, 50), xi, data_test, a_sigma, b_sigma,
lambda_vec, mu0_vec, c(1, 2, 3, 4, 5))
log_allocate_prob_univariate(80, rep(3:4, 50), xi, data_test, a_sigma, b_sigma,
lambda_vec, mu0_vec, c(1, 2, 3, 4, 5, 6))
log_allocate_prob_univariate(80, rep(3:4, 50), xi, data_test, a_sigma, b_sigma,
lambda_vec, mu0_vec, c(1, 2, 3, 4, 5, 10))
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
log_allocate_prob_univariate(80, rep(3:4, 50), xi, data_test, a_sigma, b_sigma,
lambda_vec, mu0_vec, c(1, 2, 3, 4, 5, 10))
table(cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec)$new_assign)
table(cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec)$new_assign)
table(cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec)$new_assign)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
for(j in 1:500){
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
}
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
split_merge_univariate(5, ci_test, alpha_test, xi, data_test, mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
normal_uni(5, 3, data_test, xi, mu0_vec, a_sigma, b_sigma, lambda_vec,
10, 10, 10, 300, TRUE, 50)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
set.seed(31807)
result <- normal_uni(5, 3, data_test, xi, mu0_vec, a_sigma, b_sigma, lambda_vec,
10, 10, 10, 300, 50)
result
salso(result)
?salso
salso(t(result))
t(result)
salso(result)
knitr::opts_chunk$set(echo = TRUE)
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(LaplacesDemon)
library(salso)
library(ClusterNormal)
rm(list = ls())
rm(list = ls())
## Data Simulation
set.seed(20882)
c(rnorm(50, -5, 1), rnorm(75, 10, 1))
plot(c(rnorm(50, -5, 1), rnorm(75, 10, 1)))
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(50, -5, 1), rnorm(75, 10, 1))
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(50, -5, 1), rnorm(75, 10, 1))
## Analysis
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(1, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
result <- normal_uni(K, K_init, data_test, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
result
salso(result[2001:10000, ])
summary(salso(result[2001:10000, ]))$estimate
table(summary(salso(result[2001:10000, ]))$estimate)
plot(data_test)
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(50, -5, 1), rnorm(50, 10, 1), rnorm(50, 0, 1))
plot(data_test)
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(50, -1, 1), rnorm(50, 1, 1), rnorm(50, 0, 1))
plot(data_test)
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(50, -2, 1), rnorm(50, 2, 1), rnorm(50, 0, 1))
plot(data_test)
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(50, -2, 4), rnorm(50, 2, 1), rnorm(50, 0, 9))
plot(data_test)
ci_actual <- sort(rep(1:3, 50))
ci_actual
plot(data_test, col = factor(ci_actual))
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(50, -2, 4), rnorm(50, -2, 1), rnorm(50, 0, 9))
ci_actual <- sort(rep(1:3, 50))
plot(data_test, col = factor(ci_actual))
library(ggplot2)
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(50, -5, 1), rnorm(75, 10, 1))
plot(x = data_test, y = c(rep(1, 50), rep(2, 75)))
data.frame(x = data_test, y = c(rep(1, 50), rep(2, 75)))
library(tidyverse)
data.frame(x = data_test, y = c(rep(1, 50), rep(2, 75))) %>%
ggplot(aes(x = x, color = y)) +
geom_histogram(0)
data.frame(x = data_test, y = c(rep(1, 50), rep(2, 75))) %>%
ggplot(aes(x = x, color = y)) +
geom_histogram()
?geom_histogram
data.frame(x = data_test, y = c(rep(1, 50), rep(2, 75))) %>%
ggplot(aes(x = x, color = y)) +
geom_histogram(bins = 5)
data.frame(x = data_test, y = c(rep(1, 50), rep(2, 75))) %>%
ggplot(aes(x = x, color = y)) +
geom_histogram(bins = 30)
data.frame(x = data_test, y = c(rep(1, 50), rep(2, 75))) %>%
ggplot(aes(x = x, color = y)) +
geom_histogram(bins = 30) +
theme_bw()
data.frame(x = data_test, y = c(rep(1, 50), rep(2, 75))) %>%
ggplot(aes(x = x, group = y)) +
geom_histogram(bins = 30) +
theme_bw()
data.frame(x = data_test, y = c(rep(1, 50), rep(2, 75))) %>%
ggplot(aes(x = x, group = y)) +
geom_histogram(bins = 30, col = y) +
theme_bw()
data.frame(x = data_test, y = c(rep(1, 50), rep(2, 75))) %>%
ggplot(aes(x = x, fill() = y)) +
data.frame(x = data_test, y = c(rep(1, 50), rep(2, 75))) %>%
ggplot(aes(x = x, fill = y)) +
geom_histogram(bins = 30) +
theme_bw()
data.frame(x = data_test, y = c(rep(1, 50), rep(2, 75))) %>%
ggplot(aes(x = x)) +
geom_histogram(aes(color = y), bins = 30) +
theme_bw()
data.frame(x = data_test, y = c(rep(1, 50), rep(2, 75))) %>%
ggplot(aes(x = x, fill = factor(y))) +
geom_histogram(bins = 30) +
theme_bw()
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(100, -2, 4), rnorm(100, -2, 1), rnorm(100, 0, 9))
ci_actual <- factor(sort(rep(1:3, 100)))
data.frame(x = data_test, ci_actual) %>%
ggplot(aes(x = x, fill = ci_actual)) +
geom_histogram(bins = 30) +
theme_bw()
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(100, -10, 4), rnorm(100, -2, 1), rnorm(100, 0, 9))
ci_actual <- factor(sort(rep(1:3, 100)))
data.frame(x = data_test, ci_actual) %>%
ggplot(aes(x = x, fill = ci_actual)) +
geom_histogram(bins = 30) +
theme_bw()
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(100, -10, 4), rnorm(100, 0, 1), rnorm(100, 10, 9))
ci_actual <- factor(sort(rep(1:3, 100)))
data.frame(x = data_test, ci_actual) %>%
ggplot(aes(x = x, fill = ci_actual)) +
geom_histogram(bins = 30) +
theme_bw()
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(100, -10, 1.5), rnorm(100, 0, 1.5), rnorm(100, 10, 1.5))
ci_actual <- factor(sort(rep(1:3, 100)))
data.frame(x = data_test, ci_actual) %>%
ggplot(aes(x = x, fill = ci_actual)) +
geom_histogram(bins = 30) +
theme_bw()
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(100, -10, 10), rnorm(100, 0, 10), rnorm(100, 10, 10))
ci_actual <- factor(sort(rep(1:3, 100)))
data.frame(x = data_test, ci_actual) %>%
ggplot(aes(x = x, fill = ci_actual)) +
geom_histogram(bins = 30) +
theme_bw()
data.frame(x = data_test, ci_actual) %>%
ggplot(aes(x = x, fill = ci_actual)) +
geom_histogram(bins = 30, alpha = 0.5) +
theme_bw()
data.frame(x = data_test, ci_actual) %>%
ggplot(aes(x = x, fill = ci_actual)) +
geom_histogram(bins = 30, alpha = 0.75) +
theme_bw()
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(100, -10, 4), rnorm(100, 0, 10), rnorm(100, 10, 10))
ci_actual <- factor(sort(rep(1:3, 100)))
data.frame(x = data_test, ci_actual) %>%
ggplot(aes(x = x, fill = ci_actual)) +
geom_histogram(bins = 30, alpha = 0.75) +
theme_bw()
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(100, -10, 4), rnorm(100, 0, 1), rnorm(100, 10, 10))
ci_actual <- factor(sort(rep(1:3, 100)))
data.frame(x = data_test, ci_actual) %>%
ggplot(aes(x = x, fill = ci_actual)) +
geom_histogram(bins = 30, alpha = 0.75) +
theme_bw()
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(100, -10, 4), rnorm(100, 0, 1), rnorm(100, 15, 10))
ci_actual <- factor(sort(rep(1:3, 100)))
data.frame(x = data_test, ci_actual) %>%
ggplot(aes(x = x, fill = ci_actual)) +
geom_histogram(bins = 30, alpha = 0.75) +
theme_bw()
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(100, -10, 4), rnorm(100, 0, 1), rnorm(100, 15, 10))
ci_actual <- factor(sort(rep(1:3, 100)))
data.frame(x = data_test, ci_actual) %>%
ggplot(aes(x = x, fill = ci_actual)) +
geom_histogram(bins = 30, alpha = 0.75) +
theme_bw()
## Analysis
K <- 7
K_init <- 2
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(1, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, data_test, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 5000, 1000)
Sys.time() - start_time
table(summary(salso(result[2001:5000, ]))$estimate)
table(ci_actual, summary(salso(result[2001:5000, ]))$estimate)
