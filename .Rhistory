compileAttributes()
build()
install()
library(ClusterNormal)
knitr::opts_chunk$set(echo = TRUE)
library(Rcpp)
library(RcppArmadillo)
library(salso)
library(ClusterNormal)
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(doParallel)
library(mclustcomp)
library(factoextra)
library(PReMiuM) ## Dirichlet Process
library(AntMAN) ## Mixture of Finite Mixture
## Data Simulation
rm(list = ls())
seed_val <- 2
### Setting 1
set.seed(seed_val)
ci_actual_1 <- sample(1:2, 500, replace = TRUE)
data_sim_1 <- rnorm(500, c(-5, 5)[ci_actual_1], 1)
### Setting 2
set.seed(seed_val)
ci_actual_2 <- sample(1:5, 500, replace = TRUE)
data_sim_2 <- rnorm(500, c(-100, -50, -20, 50, 100)[ci_actual_2], 1)
### Setting 3
set.seed(seed_val)
ci_actual_3 <- sample(1:2, 500, replace = TRUE)
data_sim_3 <- rnorm(500, c(-5, 5)[ci_actual_3], 4)
### Setting 4
set.seed(seed_val)
ci_actual_4 <- sample(1:5, 500, replace = TRUE)
data_sim_4 <- rnorm(500, c(-10, -5, 0, 20, 40)[ci_actual_4],
c(1.5, 1.5, 1.5, 3, 3)[ci_actual_4])
n_unique <- function(vec){
length(unique(vec))
}
### Setting 1
K <- 10
iter <- 1000
ci_init <- sample(1:1, 500, replace = TRUE)
xi_vec <- rep(0.01, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(1, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 25
set.seed(seed_val)
start_time <- Sys.time()
result1 <- SFDM_model(iter, K, ci_init, xi_vec, scale(data_sim_1), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter, 250)
Sys.time() - start_time
table(ci_actual_1, salso(result1$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result1$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
mean(apply(result1$iter_assign, 1, n_unique))
result_status <- factor(result1$sm_status)
levels(result_status) <- c("Reject", "Accept")
result_sm <- factor(result1$split_or_merge)
levels(result_sm) <- c("Merge", "Split")
table(result_status, result_sm)
rbind(data.frame(data_sim_1, ci_actual_1,
ci_result = as.numeric(salso(result1$iter_assign[-(1:500), ], maxNClusters = K))) %>%
group_by(ci_actual_1) %>%
summarise(q = quantile(data_sim_1)) %>%
rename(cluster = ci_actual_1) %>%
mutate(type = "Actual", status = paste0("Q", c(0, 1, 2, 3, 4))) %>%
pivot_wider(names_from = status, values_from = q),
data.frame(data_sim_1, ci_actual_1,
ci_result = as.numeric(salso(result1$iter_assign[-(1:500), ], maxNClusters = K))) %>%
group_by(ci_result) %>%
summarise(q = quantile(data_sim_1)) %>%
rename(cluster = ci_result) %>%
mutate(type = "Model", status = paste0("Q", c(0, 1, 2, 3, 4))) %>%
pivot_wider(names_from = status, values_from = q))
ci_result_1 <- as.numeric(salso(result1$iter_assign[-(1:500), ], maxNClusters = K))
data.frame(data_sim_1, ci_actual_1, ci_result_1) %>%
ggplot(aes(x = data_sim_1, y = data_sim_1, col = factor(ci_actual_1))) +
geom_point() +
theme_bw() +
scale_color_manual(values=c("#69b3a2", "#404080")) +
geom_vline(xintercept = quantile(data_sim_1[ci_result_1 == 1], c(0, 1)),
linetype = "dotted", color = "#69b3a2", size = 1.5) +
geom_vline(xintercept = quantile(data_sim_1[ci_result_1 == 2], c(0, 1)),
linetype = "dotted", color = "#404080", size = 1.5) +
labs(col = "Actual", x = "Data", y = "Data")
### Setting 2
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(0.01, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(0.01, K)
a_theta <- 1
b_theta <- 4
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result2 <- SFDM_model(iter, K, ci_init, xi_vec, scale(data_sim_2), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter, 250)
Sys.time() - start_time
table(ci_actual_2, salso(result2$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result2$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
mean(apply(result2$iter_assign, 1, n_unique))
result_status <- factor(result2$sm_status)
levels(result_status) <- c("Reject", "Accept")
result_sm <- factor(result2$split_or_merge)
levels(result_sm) <- c("Merge", "Split")
table(result_status, result_sm)
### Setting 3
K <- 10
iter <- 1000
ci_init <- rep(1:1, 500)
xi_vec <- rep(0.01, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(10, K)
lambda_vec <- rep(10, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result3 <- SFDM_model(iter, K, ci_init, xi_vec, scale(data_sim_3), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter, 250)
Sys.time() - start_time
table(ci_actual_3, salso(result3$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result3$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
mean(apply(result3$iter_assign, 1, n_unique))
result_status <- factor(result3$sm_status)
levels(result_status) <- c("Reject", "Accept")
result_sm <- factor(result3$split_or_merge)
levels(result_sm) <- c("Merge", "Split")
table(result_status, result_sm)
rbind(data.frame(data_sim_3, ci_actual_3,
ci_result = as.numeric(salso(result3$iter_assign[-(1:500), ], maxNClusters = K))) %>%
group_by(ci_actual_3) %>%
summarise(q = quantile(data_sim_3)) %>%
rename(cluster = ci_actual_3) %>%
mutate(type = "Actual", status = paste0("Q", c(0, 1, 2, 3, 4))) %>%
pivot_wider(names_from = status, values_from = q),
data.frame(data_sim_3, ci_actual_3,
ci_result = as.numeric(salso(result3$iter_assign[-(1:500), ], maxNClusters = K))) %>%
group_by(ci_result) %>%
summarise(q = quantile(data_sim_3)) %>%
rename(cluster = ci_result) %>%
mutate(type = "Model", status = paste0("Q", c(0, 1, 2, 3, 4))) %>%
pivot_wider(names_from = status, values_from = q))
ci_result_3 <- as.numeric(salso(result3$iter_assign[-(1:500), ], maxNClusters = K))
data.frame(data_sim_3, ci_actual_3, ci_result_3) %>%
ggplot(aes(x = data_sim_3, y = data_sim_3, col = factor(ci_actual_3))) +
geom_point() +
theme_bw() +
scale_color_manual(values=c("#69b3a2", "#404080")) +
geom_vline(xintercept = quantile(data_sim_3[ci_result_3 == 1], c(0, 1)),
linetype = "dotted", color = "#69b3a2", size = 1.5) +
geom_vline(xintercept = quantile(data_sim_3[ci_result_3 == 2], c(0, 1)),
linetype = "dotted", color = "#404080", size = 1.5) +
## geom_vline(xintercept = quantile(data_sim_3[ci_result_3 == 3], c(0, 1)),
##            linetype = "dotted", color = "red", size = 1.5) +
labs(col = "Actual", x = "Data", y = "Data")
### Setting 4
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(0.01, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result4 <- SFDM_model(iter, K, ci_init, xi_vec, scale(data_sim_4), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter, 250)
Sys.time() - start_time
table(ci_actual_4, salso(result4$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result4$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
mean(apply(result4$iter_assign, 1, n_unique))
result_status <- factor(result4$sm_status)
levels(result_status) <- c("Reject", "Accept")
result_sm <- factor(result4$split_or_merge)
levels(result_sm) <- c("Merge", "Split")
table(result_status, result_sm)
rbind(data.frame(data_sim_4, ci_actual_4,
ci_result = as.numeric(salso(result4$iter_assign[-(1:500), ], maxNClusters = K))) %>%
group_by(ci_actual_4) %>%
summarise(q = quantile(data_sim_4)) %>%
rename(cluster = ci_actual_4) %>%
mutate(type = "Actual", status = paste0("Q", c(0, 1, 2, 3, 4))) %>%
pivot_wider(names_from = status, values_from = q),
data.frame(data_sim_4, ci_actual_4,
ci_result = as.numeric(salso(result4$iter_assign[-(1:500), ], maxNClusters = K))) %>%
group_by(ci_result) %>%
summarise(q = quantile(data_sim_4)) %>%
rename(cluster = ci_result) %>%
mutate(type = "Model", status = paste0("Q", c(0, 1, 2, 3, 4))) %>%
pivot_wider(names_from = status, values_from = q))
ci_result_4 <- as.numeric(salso(result4$iter_assign[-(1:500), ], maxNClusters = K))
data.frame(data_sim_4, ci_actual_4, ci_result_4) %>%
ggplot(aes(x = data_sim_4, y = data_sim_4, col = factor(ci_actual_4))) +
geom_point() +
theme_bw() +
## scale_color_manual(values=c("#69b3a2", "#404080")) +
geom_vline(xintercept = quantile(data_sim_4[ci_result_4 == 1], c(0, 1)),
linetype = "dotted", color = "#69b3a2", size = 1.5) +
geom_vline(xintercept = quantile(data_sim_4[ci_result_4 == 2], c(0, 1)),
linetype = "dotted", color = "#404080", size = 1.5) +
geom_vline(xintercept = quantile(data_sim_4[ci_result_4 == 3], c(0, 1)),
linetype = "dotted", color = "red", size = 1.5) +
geom_vline(xintercept = quantile(data_sim_4[ci_result_4 == 4], c(0, 1)),
linetype = "dotted", color = "orange", size = 1.5) +
labs(col = "Actual", x = "Data", y = "Data")
### Setting 4
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(0.0001, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result4 <- SFDM_model(iter, K, ci_init, xi_vec, scale(data_sim_4), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter, 250)
Sys.time() - start_time
table(ci_actual_4, salso(result4$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result4$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
mean(apply(result4$iter_assign, 1, n_unique))
result_status <- factor(result4$sm_status)
levels(result_status) <- c("Reject", "Accept")
result_sm <- factor(result4$split_or_merge)
levels(result_sm) <- c("Merge", "Split")
table(result_status, result_sm)
### Setting 4
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(0.001, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result4 <- SFDM_model(iter, K, ci_init, xi_vec, scale(data_sim_4), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter, 250)
Sys.time() - start_time
table(ci_actual_4, salso(result4$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result4$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
mean(apply(result4$iter_assign, 1, n_unique))
result_status <- factor(result4$sm_status)
levels(result_status) <- c("Reject", "Accept")
result_sm <- factor(result4$split_or_merge)
levels(result_sm) <- c("Merge", "Split")
table(result_status, result_sm)
### Setting 4
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(0.1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result4 <- SFDM_model(iter, K, ci_init, xi_vec, scale(data_sim_4), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter, 250)
Sys.time() - start_time
table(ci_actual_4, salso(result4$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result4$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
mean(apply(result4$iter_assign, 1, n_unique))
### Setting 4
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result4 <- SFDM_model(iter, K, ci_init, xi_vec, scale(data_sim_4), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter, 250)
Sys.time() - start_time
table(ci_actual_4, salso(result4$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result4$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
mean(apply(result4$iter_assign, 1, n_unique))
result_status <- factor(result4$sm_status)
levels(result_status) <- c("Reject", "Accept")
result_sm <- factor(result4$split_or_merge)
levels(result_sm) <- c("Merge", "Split")
table(result_status, result_sm)
rbind(data.frame(data_sim_4, ci_actual_4,
ci_result = as.numeric(salso(result4$iter_assign[-(1:500), ], maxNClusters = K))) %>%
group_by(ci_actual_4) %>%
summarise(q = quantile(data_sim_4)) %>%
rename(cluster = ci_actual_4) %>%
mutate(type = "Actual", status = paste0("Q", c(0, 1, 2, 3, 4))) %>%
pivot_wider(names_from = status, values_from = q),
data.frame(data_sim_4, ci_actual_4,
ci_result = as.numeric(salso(result4$iter_assign[-(1:500), ], maxNClusters = K))) %>%
group_by(ci_result) %>%
summarise(q = quantile(data_sim_4)) %>%
rename(cluster = ci_result) %>%
mutate(type = "Model", status = paste0("Q", c(0, 1, 2, 3, 4))) %>%
pivot_wider(names_from = status, values_from = q))
ci_result_4 <- as.numeric(salso(result4$iter_assign[-(1:500), ], maxNClusters = K))
data.frame(data_sim_4, ci_actual_4, ci_result_4) %>%
ggplot(aes(x = data_sim_4, y = data_sim_4, col = factor(ci_actual_4))) +
geom_point() +
theme_bw() +
## scale_color_manual(values=c("#69b3a2", "#404080")) +
geom_vline(xintercept = quantile(data_sim_4[ci_result_4 == 1], c(0, 1)),
linetype = "dotted", color = "#69b3a2", size = 1.5) +
geom_vline(xintercept = quantile(data_sim_4[ci_result_4 == 2], c(0, 1)),
linetype = "dotted", color = "#404080", size = 1.5) +
geom_vline(xintercept = quantile(data_sim_4[ci_result_4 == 3], c(0, 1)),
linetype = "dotted", color = "red", size = 1.5) +
geom_vline(xintercept = quantile(data_sim_4[ci_result_4 == 4], c(0, 1)),
linetype = "dotted", color = "orange", size = 1.5) +
labs(col = "Actual", x = "Data", y = "Data")
### Setting 4
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(100, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result4 <- SFDM_model(iter, K, ci_init, xi_vec, scale(data_sim_4), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter, 250)
Sys.time() - start_time
table(ci_actual_4, salso(result4$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result4$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
mean(apply(result4$iter_assign, 1, n_unique))
### Setting 4
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(10, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result4 <- SFDM_model(iter, K, ci_init, xi_vec, scale(data_sim_4), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter, 250)
Sys.time() - start_time
table(ci_actual_4, salso(result4$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result4$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### Setting 4
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result4 <- SFDM_model(iter, K, ci_init, xi_vec, scale(data_sim_4), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter, 250)
Sys.time() - start_time
table(ci_actual_4, salso(result4$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result4$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### Setting 4
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(0.01, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result4 <- SFDM_model(iter, K, ci_init, xi_vec, scale(data_sim_4), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter, 250)
Sys.time() - start_time
table(ci_actual_4, salso(result4$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result4$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
### Sandbox: -------------------------------------------------------------------
rm(list = ls())
ci_actual <- rep(1:3, 5)
mu0 <- c(-1, 0, 1)
a_sigma <- c(1, 1, 1.5)
b_sigma <- c(1, 0.1, 0.1)
lambda <- c(1, 1, 1)
y <- rnorm(15)
log_marginal(ci_actual, y, a_sigma, b_sigma, lambda, mu0)
rm(list = ls())
ci_actual <- rep(1:3, 5)
mu0 <- c(-1, 0, 1)
a_sigma <- c(1, 1, 1.5)
b_sigma <- c(1, 0.1, 0.1)
lambda <- c(1, 1, 1)
y <- rnorm(15)
log_marginal(ci_actual, y, a_sigma, b_sigma, lambda, mu0)
### Required Commands for building the packages: -------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
rm(list = ls())
set.seed(31)
ci_actual <- rep(1:3, 5)
mu0 <- c(-1, 0, 1)
a_sigma <- c(1, 1, 1.5)
b_sigma <- c(1, 0.1, 0.1)
lambda <- c(1, 1, 1)
y <- rnorm(15)
log_marginal(ci_actual, y, a_sigma, b_sigma, lambda, mu0)
y^2
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
### Sandbox: -------------------------------------------------------------------
rm(list = ls())
set.seed(31)
ci_actual <- rep(1:3, 5)
mu0 <- c(-1, 0, 1)
a_sigma <- c(1, 1, 1.5)
b_sigma <- c(1, 0.1, 0.1)
lambda <- c(1, 1, 1)
y <- rnorm(15)
log_marginal(ci_actual, y, a_sigma, b_sigma, lambda, mu0)
(0.003088052^2) +
(-1 + y[1])/(1 + 1)
(0.003088052^2) +
(-1 + y[5])/(1 + 1)
(0.003088052^2) +
(0 + y[5])/(1 + 1)
