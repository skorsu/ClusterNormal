mix_components_prior = components_prior,
mix_weight_prior = weights_prior,
mcmc_parameters = mcmc_params, init_K = 1)
AM_mod <- AM_clustering(fit)
Sys.time() - AM_start_time
table(ci_actual_1, salso(AM_mod, maxNClusters = 10))
### AntMAN
mixture_uvn_params <- AM_mix_hyperparams_uninorm(m0 = 0, k0 = 0.1, nu0 = 100, sig02 = 1) ### Hyperparamerter for the data
mcmc_params <- AM_mcmc_parameters(niter = 1000, burnin = 500)
components_prior <- AM_mix_components_prior_dirac(10) ### Possible Maximum Number of Cluster
weights_prior <- AM_mix_weights_prior_gamma(a = 10, b = 1) ### Hyperparamerter for the cluster
AM_start_time <- Sys.time()
fit <- AntMAN::AM_mcmc_fit(y = as.numeric(scale(data_sim_2)),
mix_kernel_hyperparams = mixture_uvn_params,
mix_components_prior = components_prior,
mix_weight_prior = weights_prior,
mcmc_parameters = mcmc_params, init_K = 1)
AM_mod <- AM_clustering(fit)
Sys.time() - AM_start_time
table(ci_actual_2, salso(AM_mod, maxNClusters = 10))
### Setting 2
K <- 10
iter <- 10000
ci_init <- rep(1, 500)
xi_vec <- rep(10, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(0.1, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result2 <- our_model(iter, K, ci_init, xi_vec, scale(data_sim_2), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter)
Sys.time() - start_time
table(ci_actual_2, salso(result2$iter_assign[-(1:1000), ], maxNClusters = K))
plot(1:iter, apply(result2$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### Setting 2
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(10, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(0.1, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result2 <- our_model(iter, K, ci_init, xi_vec, scale(data_sim_2), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter)
Sys.time() - start_time
table(ci_actual_2, salso(result2$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result2$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### Setting 2
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(10, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(0.1, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result2 <- our_model(iter, K, ci_init, xi_vec, scale(data_sim_2), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter)
Sys.time() - start_time
table(ci_actual_2, salso(result2$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result2$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### Setting 3
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(10, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(0.1, K)
a_theta <- 1
b_theta <- 2
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result3 <- our_model(iter, K, ci_init, xi_vec, scale(data_sim_3), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter)
Sys.time() - start_time
table(ci_actual_3, salso(result3$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result3$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### Setting 3
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(10, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(1, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
a_theta <- 1
b_theta <- 4
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result3 <- our_model(iter, K, ci_init, xi_vec, scale(data_sim_3), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter)
Sys.time() - start_time
table(ci_actual_3, salso(result3$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result3$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### Setting 3
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(10, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(0.1, K)
a_theta <- 1
b_theta <- 4
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result3 <- our_model(iter, K, ci_init, xi_vec, scale(data_sim_3), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter)
Sys.time() - start_time
table(ci_actual_3, salso(result3$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result3$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### Setting 3
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(0.1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(10, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(0.1, K)
a_theta <- 1
b_theta <- 4
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result3 <- our_model(iter, K, ci_init, xi_vec, scale(data_sim_3), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter)
Sys.time() - start_time
table(ci_actual_3, salso(result3$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result3$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### Setting 3
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(0.01, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(10, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(0.1, K)
a_theta <- 1
b_theta <- 4
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result3 <- our_model(iter, K, ci_init, xi_vec, scale(data_sim_3), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter)
Sys.time() - start_time
table(ci_actual_3, salso(result3$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result3$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### Setting 3
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(0.01, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(10, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(0.1, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result3 <- our_model(iter, K, ci_init, xi_vec, scale(data_sim_3), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter)
Sys.time() - start_time
table(ci_actual_3, salso(result3$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result3$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### Setting 3
K <- 10
iter <- 2000
ci_init <- rep(1, 500)
xi_vec <- rep(0.01, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(10, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(0.1, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result3 <- our_model(iter, K, ci_init, xi_vec, scale(data_sim_3), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter)
Sys.time() - start_time
table(ci_actual_3, salso(result3$iter_assign[-(1:1000), ], maxNClusters = K))
plot(1:iter, apply(result3$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### Setting 3
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(0.01, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(10, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(0.1, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result3 <- our_model(iter, K, ci_init, xi_vec, scale(data_sim_3), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter)
Sys.time() - start_time
table(ci_actual_3, salso(result3$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result3$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### DP
scale_dt <- data.frame(x = scale(data_sim_2))
DP_start_time <- Sys.time()
mod_DP <- profRegr(yModel = "Normal", xModel = "Normal", nSweeps = 500,
nBurn = 500, data = scale_dt, covNames = "x", outcome = "x",
nClusInit = 1, run = TRUE, excludeY = TRUE, reportBurnIn = TRUE)
dissimObj <- calcDissimilarityMatrix(mod_DP)
clusObj <- calcOptimalClustering(dissimObj)
Sys.time() - DP_start_time
table(clusObj$clustering, ci_actual_2)
### AntMAN
mixture_uvn_params <- AM_mix_hyperparams_uninorm(m0 = 0, k0 = 0.1, nu0 = 100, sig02 = 1) ### Hyperparamerter for the data
mcmc_params <- AM_mcmc_parameters(niter = 1000, burnin = 500)
components_prior <- AM_mix_components_prior_dirac(10) ### Possible Maximum Number of Cluster
weights_prior <- AM_mix_weights_prior_gamma(a = 10, b = 1) ### Hyperparamerter for the cluster
AM_start_time <- Sys.time()
fit <- AntMAN::AM_mcmc_fit(y = as.numeric(scale(data_sim_2)),
mix_kernel_hyperparams = mixture_uvn_params,
mix_components_prior = components_prior,
mix_weight_prior = weights_prior,
mcmc_parameters = mcmc_params, init_K = 1)
AM_mod <- AM_clustering(fit)
Sys.time() - AM_start_time
table(ci_actual_2, salso(AM_mod, maxNClusters = 10))
### AntMAN
mixture_uvn_params <- AM_mix_hyperparams_uninorm(m0 = 0, k0 = 0.1, nu0 = 100, sig02 = 1) ### Hyperparamerter for the data
mcmc_params <- AM_mcmc_parameters(niter = 1000, burnin = 500)
components_prior <- AM_mix_components_prior_dirac(10) ### Possible Maximum Number of Cluster
weights_prior <- AM_mix_weights_prior_gamma(a = 10, b = 1) ### Hyperparamerter for the cluster
AM_start_time <- Sys.time()
fit <- AntMAN::AM_mcmc_fit(y = as.numeric(scale(data_sim_2)),
mix_kernel_hyperparams = mixture_uvn_params,
mix_components_prior = components_prior,
mix_weight_prior = weights_prior,
mcmc_parameters = mcmc_params, init_K = 1)
AM_mod <- AM_clustering(fit)
Sys.time() - AM_start_time
table(ci_actual_2, salso(AM_mod, maxNClusters = 10))
### AntMAN
mixture_uvn_params <- AM_mix_hyperparams_uninorm(m0 = 0, k0 = 0.1, nu0 = 100, sig02 = 1) ### Hyperparamerter for the data
mcmc_params <- AM_mcmc_parameters(niter = 1000, burnin = 500)
components_prior <- AM_mix_components_prior_dirac(10) ### Possible Maximum Number of Cluster
weights_prior <- AM_mix_weights_prior_gamma(a = 10, b = 1) ### Hyperparamerter for the cluster
AM_start_time <- Sys.time()
fit <- AntMAN::AM_mcmc_fit(y = as.numeric(scale(data_sim_2)),
mix_kernel_hyperparams = mixture_uvn_params,
mix_components_prior = components_prior,
mix_weight_prior = weights_prior,
mcmc_parameters = mcmc_params, init_K = 1)
AM_mod <- AM_clustering(fit)
Sys.time() - AM_start_time
table(ci_actual_2, salso(AM_mod, maxNClusters = 10))
### DP
scale_dt <- data.frame(x = scale(data_sim_3))
DP_start_time <- Sys.time()
mod_DP <- profRegr(yModel = "Normal", xModel = "Normal", nSweeps = 500,
nBurn = 500, data = scale_dt, covNames = "x", outcome = "x",
nClusInit = 1, run = TRUE, excludeY = TRUE, reportBurnIn = TRUE)
dissimObj <- calcDissimilarityMatrix(mod_DP)
clusObj <- calcOptimalClustering(dissimObj)
Sys.time() - DP_start_time
table(clusObj$clustering, ci_actual_3)
### AntMAN
mixture_uvn_params <- AM_mix_hyperparams_uninorm(m0 = 0, k0 = 0.01, nu0 = 10, sig02 = 1) ### Hyperparamerter for the data
mcmc_params <- AM_mcmc_parameters(niter = 1000, burnin = 500)
components_prior <- AM_mix_components_prior_dirac(10) ### Possible Maximum Number of Cluster
weights_prior <- AM_mix_weights_prior_gamma(a = 0.01, b = 1) ### Hyperparamerter for the cluster
AM_start_time <- Sys.time()
fit <- AntMAN::AM_mcmc_fit(y = as.numeric(scale(data_sim_2)),
mix_kernel_hyperparams = mixture_uvn_params,
mix_components_prior = components_prior,
mix_weight_prior = weights_prior,
mcmc_parameters = mcmc_params, init_K = 1)
AM_mod <- AM_clustering(fit)
Sys.time() - AM_start_time
table(ci_actual_3, salso(AM_mod, maxNClusters = 10))
### AntMAN
mixture_uvn_params <- AM_mix_hyperparams_uninorm(m0 = 0, k0 = 0.01, nu0 = 10, sig02 = 1) ### Hyperparamerter for the data
mcmc_params <- AM_mcmc_parameters(niter = 1000, burnin = 500)
components_prior <- AM_mix_components_prior_dirac(10) ### Possible Maximum Number of Cluster
weights_prior <- AM_mix_weights_prior_gamma(a = 0.01, b = 1) ### Hyperparamerter for the cluster
AM_start_time <- Sys.time()
fit <- AntMAN::AM_mcmc_fit(y = as.numeric(scale(data_sim_2)),
mix_kernel_hyperparams = mixture_uvn_params,
mix_components_prior = components_prior,
mix_weight_prior = weights_prior,
mcmc_parameters = mcmc_params, init_K = 1)
AM_mod <- AM_clustering(fit)
Sys.time() - AM_start_time
table(ci_actual_3, salso(AM_mod, maxNClusters = 10))
### Setting 4
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(0.01, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(0.01, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 25
set.seed(seed_val)
start_time <- Sys.time()
result4 <- our_model(iter, K, ci_init, xi_vec, scale(data_sim_4), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter)
Sys.time() - start_time
table(ci_actual_4, salso(result4$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result4$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### Setting 4
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(0.01, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(0.01, K)
a_theta <- 1
b_theta <- 10
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result4 <- our_model(iter, K, ci_init, xi_vec, scale(data_sim_4), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter)
Sys.time() - start_time
table(ci_actual_4, salso(result4$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result4$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### Setting 4
K <- 10
iter <- 3000
ci_init <- rep(1, 500)
xi_vec <- rep(0.01, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(0.01, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result4 <- our_model(iter, K, ci_init, xi_vec, scale(data_sim_4), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter)
Sys.time() - start_time
table(ci_actual_4, salso(result4$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result4$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### Setting 4
K <- 10
iter <- 3000
ci_init <- rep(1, 500)
xi_vec <- rep(0.01, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(0.01, K)
a_theta <- 1
b_theta <- 4
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result4 <- our_model(iter, K, ci_init, xi_vec, scale(data_sim_4), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter)
Sys.time() - start_time
table(ci_actual_4, salso(result4$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result4$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### Setting 4
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(0.01, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(0.01, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 20
set.seed(seed_val)
start_time <- Sys.time()
result4 <- our_model(iter, K, ci_init, xi_vec, scale(data_sim_4), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter)
Sys.time() - start_time
table(ci_actual_4, salso(result4$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result4$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### Setting 4
K <- 10
iter <- 1000
ci_init <- rep(1, 500)
xi_vec <- rep(10, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(0.01, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 20
set.seed(seed_val)
start_time <- Sys.time()
result4 <- our_model(iter, K, ci_init, xi_vec, scale(data_sim_4), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter)
Sys.time() - start_time
table(ci_actual_4, salso(result4$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result4$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### Setting 4
K <- 10
iter <- 2000
ci_init <- rep(1, 500)
xi_vec <- rep(10, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(0.01, K)
a_theta <- 1
b_theta <- 1
sm_iter <- 10
set.seed(seed_val)
start_time <- Sys.time()
result4 <- our_model(iter, K, ci_init, xi_vec, scale(data_sim_4), mu0_vec,
a_sigma_vec, b_sigma_vec, lambda_vec, a_theta, b_theta,
sm_iter)
Sys.time() - start_time
table(ci_actual_4, salso(result4$iter_assign[-(1:500), ], maxNClusters = K))
plot(1:iter, apply(result4$iter_assign, 1, n_unique), type = "l",
ylim = c(1, K), xlab = "Iteration", ylab = "Active Cluster")
### DP
scale_dt <- data.frame(x = scale(data_sim_4))
DP_start_time <- Sys.time()
mod_DP <- profRegr(yModel = "Normal", xModel = "Normal", nSweeps = 1500,
nBurn = 500, data = scale_dt, covNames = "x", outcome = "x",
nClusInit = 1, run = TRUE, excludeY = TRUE, reportBurnIn = TRUE)
dissimObj <- calcDissimilarityMatrix(mod_DP)
clusObj <- calcOptimalClustering(dissimObj)
Sys.time() - DP_start_time
table(clusObj$clustering, ci_actual_4)
### AntMAN
mixture_uvn_params <- AM_mix_hyperparams_uninorm(m0 = 0, k0 = 0.01, nu0 = 100, sig02 = 1) ### Hyperparamerter for the data
mcmc_params <- AM_mcmc_parameters(niter = 1000, burnin = 500)
components_prior <- AM_mix_components_prior_dirac(10) ### Possible Maximum Number of Cluster
weights_prior <- AM_mix_weights_prior_gamma(a = 10, b = 1) ### Hyperparamerter for the cluster
AM_start_time <- Sys.time()
fit <- AntMAN::AM_mcmc_fit(y = as.numeric(scale(data_sim_2)),
mix_kernel_hyperparams = mixture_uvn_params,
mix_components_prior = components_prior,
mix_weight_prior = weights_prior,
mcmc_parameters = mcmc_params, init_K = 1)
AM_mod <- AM_clustering(fit)
Sys.time() - AM_start_time
table(ci_actual_3, salso(AM_mod, maxNClusters = 10))
