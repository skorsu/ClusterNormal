ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(10, 20, 30)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
### Data Simulation
set.seed(1843)
N <- 500
K <- 3
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(10, 20, 30)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
test_result <- fmm_model_R(iter = 3000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, N))
table(salso(test_result$assign_mat[-c(1:1000), ], maxNClusters = K_max), ci_true)
### Data Simulation
set.seed(1843)
N <- 500
K <- 3
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(10, 20, 30)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
test_result <- fmm_model_R(iter = 3000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, N))
table(salso(test_result$assign_mat[-c(1:1000), ], maxNClusters = K), ci_true)
plot(test_result$mu_mat[, 1], type = "l")
### Data Simulation: (1)
set.seed(1843)
N <- 500
K <- 3
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(10, 20, 30)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
### Run the model: (1)
test_result <- fmm_model_R(iter = 3000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, N))
### salso result: (1)
table(salso(test_result$assign_mat[-c(1:1000), ], maxNClusters = K), ci_true)
apply(test_result$mu_mat[-c(1:1000), ], 2, mean)
apply(test_result$mu_mat[-c(1:1000), ], 2, mean)
apply(test_result$s2_mat[-c(1:1000), ], 2, mean)
apply(test_result$mixing_mat[-c(1:1000), ], 2, mean)
plot(test_result$mu_mat[-c(1:1000), 1])
plot(test_result$mu_mat[-c(1:1000), 1], type = "l")
plot(test_result$mu_mat[-c(1:1000), 1], type = "l", ylim = c(-5, 35))
plot(test_result$mu_mat[-c(1:1000), 1], type = "l", ylim = c(5, 35))
plot(test_result$mu_mat[-c(1:1000), 1], type = "l", ylim = c(5, 35))
lines(1:2000, test_result$mu_mat[-c(1:1000), 2], col = "blue")
plot(test_result$mu_mat[-c(1:1000), 1], type = "l", ylim = c(5, 35), col = "red")
lines(1:2000, test_result$mu_mat[-c(1:1000), 2], col = "blue")
plot(test_result$mu_mat[-c(1:1000), 1], type = "l", ylim = c(5, 35), col = "red")
lines(1:2000, test_result$mu_mat[-c(1:1000), 2], col = "blue")
lines(1:2000, test_result$mu_mat[-c(1:1000), 3], col = "salmon")
plot(test_result$mu_mat[-c(1:1000), 1], type = "l", ylim = c(7.5, 32.5), col = "red")
plot(test_result$mu_mat[-c(1:1000), 1], type = "l", ylim = c(7.5, 32.5), col = "red")
lines(1:2000, test_result$mu_mat[-c(1:1000), 2], col = "blue")
lines(1:2000, test_result$mu_mat[-c(1:1000), 3], col = "salmon")
plot(test_result$mu_mat[-c(1:1000), 1], type = "l", ylim = c(7.5, 32.5),
col = "red", main = "mu", ylab = "mu", xlab = "iteration")
lines(1:2000, test_result$mu_mat[-c(1:1000), 2], col = "blue")
lines(1:2000, test_result$mu_mat[-c(1:1000), 3], col = "salmon")
plot(test_result$s2_mat[-c(1:1000), 1], type = "l",
col = "red", main = "mu", ylab = "mu", xlab = "iteration")
plot(test_result$s2_mat[-c(1:1000), 1], type = "l",
col = "red", main = "mu", ylab = "mu", xlab = "iteration")
lines(1:2000, test_result$s2_mat[-c(1:1000), 2], col = "blue")
lines(1:2000, test_result$s2_mat[-c(1:1000), 3], col = "salmon")
plot(test_result$s2_mat[-c(1:1000), 1], type = "l", ylim = c(0, 3),
col = "red", main = "mu", ylab = "mu", xlab = "iteration")
lines(1:2000, test_result$s2_mat[-c(1:1000), 2], col = "blue")
lines(1:2000, test_result$s2_mat[-c(1:1000), 3], col = "salmon")
plot(test_result$s2_mat[-c(1:1000), 1], type = "l", ylim = c(0, 3),
col = "red", main = "s2", ylab = "s2", xlab = "iteration")
lines(1:2000, test_result$s2_mat[-c(1:1000), 2], col = "blue")
lines(1:2000, test_result$s2_mat[-c(1:1000), 3], col = "salmon")
plot(test_result$mixing_mat[-c(1:1000), 1], type = "l", ylim = c(0, 1),
col = "red", main = "s2", ylab = "s2", xlab = "iteration")
plot(test_result$mixing_mat[-c(1:1000), 1], type = "l", ylim = c(0, 1),
col = "red", main = "s2", ylab = "s2", xlab = "iteration")
lines(1:2000, test_result$mixing_mat[-c(1:1000), 2], col = "blue")
lines(1:2000, test_result$mixing_mat[-c(1:1000), 3], col = "salmon")
plot(test_result$mixing_mat[-c(1:1000), 1], type = "l", ylim = c(0, 1),
col = "red", main = "mixing weight", ylab = "mixing weight",
xlab = "iteration")
lines(1:2000, test_result$mixing_mat[-c(1:1000), 2], col = "blue")
lines(1:2000, test_result$mixing_mat[-c(1:1000), 3], col = "salmon")
### Data Simulation: (2)
set.seed(1213441)
N <- 500
K <- 3
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(7, 12, 17)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
?sample
### Data Simulation: (2)
set.seed(1213441)
N <- 500
K <- 3
ci_true <- sample(1:K, N, replace = TRUE, prob = c(0.25, 0.35, 0.4))
dat_sim <- rnorm(N, c(7, 12, 17)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
### Data Simulation: (2)
set.seed(12441)
N <- 500
K <- 3
ci_true <- sample(1:K, N, replace = TRUE, prob = c(0.25, 0.35, 0.4))
dat_sim <- rnorm(N, c(7, 12, 17)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
### Run the model: (1)
test_result <- fmm_model_R(iter = 3000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, N))
### salso result: (1)
table(salso(test_result$assign_mat[-c(1:1000), ], maxNClusters = K), ci_true)
apply(test_result$mu_mat[-c(1:1000), ], 2, mean)
apply(test_result$s2_mat[-c(1:1000), ], 2, mean)
apply(test_result$mixing_mat[-c(1:1000), ], 2, mean)
plot(test_result$mu_mat[-c(1:1000), 1], type = "l", ylim = c(7.5, 32.5),
col = "red", main = "mu", ylab = "mu", xlab = "iteration")
lines(1:2000, test_result$mu_mat[-c(1:1000), 2], col = "blue")
lines(1:2000, test_result$mu_mat[-c(1:1000), 3], col = "salmon")
plot(test_result$mu_mat[-c(1:1000), 1], type = "l", ylim = c(5, 20),
col = "red", main = "mu", ylab = "mu", xlab = "iteration")
lines(1:2000, test_result$mu_mat[-c(1:1000), 2], col = "blue")
lines(1:2000, test_result$mu_mat[-c(1:1000), 3], col = "salmon")
plot(test_result$mixing_mat[-c(1:1000), 1], type = "l", ylim = c(0, 1),
col = "red", main = "mixing weight", ylab = "mixing weight",
xlab = "iteration")
lines(1:2000, test_result$mixing_mat[-c(1:1000), 2], col = "blue")
lines(1:2000, test_result$mixing_mat[-c(1:1000), 3], col = "salmon")
plot(test_result$s2_mat[-c(1:1000), 1], type = "l", ylim = c(0, 3),
col = "red", main = "s2", ylab = "s2", xlab = "iteration")
lines(1:2000, test_result$s2_mat[-c(1:1000), 2], col = "blue")
lines(1:2000, test_result$s2_mat[-c(1:1000), 3], col = "salmon")
### Data Simulation: (2)
set.seed(12441)
N <- 500
K <- 5
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(0, 7.5, 15, 25, 35)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
### Run the model: (1)
test_result <- fmm_model_R(iter = 3000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, N))
### salso result: (1)
table(salso(test_result$assign_mat[-c(1:1000), ], maxNClusters = K), ci_true)
### Run the model: (1)
test_result <- fmm_model_R(iter = 3000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 1000, xi0 = 1,
ci_init = rep(1, N))
### salso result: (1)
table(salso(test_result$assign_mat[-c(1:1000), ], maxNClusters = K), ci_true)
### Run the model: (1)
test_result <- fmm_model_R(iter = 3000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 1000, xi0 = 1,
ci_init = rep(1, N))
### salso result: (1)
table(salso(test_result$assign_mat[-c(1:1000), ], maxNClusters = K), ci_true)
hist(rnorm(10000, 0, sqrt(1000)))
hist(rnorm(10000, 0, sqrt(1000)), breaks = 100)
bmixnorm(dat)
bmixnorm(dat_sim)
bmixnorm(dat_sim, k = 5)
bmixnorm(dat_sim, k = 5)
bmixnorm(dat_sim)
### Data Simulation: (2)
set.seed(12441)
N <- 500
K <- 5
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(0, 10, 20, 30, 40)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
### Run the model: (1)
test_result <- fmm_model_R(iter = 3000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, N))
### salso result: (1)
table(salso(test_result$assign_mat[-c(1:1000), ], maxNClusters = K), ci_true)
### Data Simulation: (2)
set.seed(12441)
N <- 500
K <- 5
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(0, 7.5, 15, 25, 35)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
### Run the model: (1)
test_result <- fmm_model_R(iter = 3000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 1000, xi0 = 1,
ci_init = rep(1, N))
### salso result: (1)
table(salso(test_result$assign_mat[-c(1:1000), ], maxNClusters = K), ci_true)
hist(rnorm(10000, 0, sqrt(1000)), breaks = 100)
hist(rnorm(10000, 0, sqrt(100)), breaks = 100)
### Run the model: (1)
test_result <- fmm_model_R(iter = 10000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, N))
### salso result: (1)
table(salso(test_result$assign_mat[-c(1:1000), ], maxNClusters = K), ci_true)
### Data Simulation: (2)
set.seed(12441)
N <- 500
K <- 5
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(0, 7.5, 15, 25, 35)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
### Run the model: (1)
test_result <- fmm_model_R(iter = 3000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, N))
### salso result: (1)
table(salso(test_result$assign_mat[-c(1:1000), ], maxNClusters = K), ci_true)
plot(test_result$mixing_mat[-c(1:1000), 1], type = "l", ylim = c(0, 1),
col = "red", main = "mixing weight", ylab = "mixing weight",
xlab = "iteration")
lines(1:2000, test_result$mixing_mat[-c(1:1000), 2], col = "blue")
lines(1:2000, test_result$mixing_mat[-c(1:1000), 3], col = "salmon")
plot(test_result$mu_mat[-c(1:1000), 1], type = "l", ylim = c(5, 20),
col = "red", main = "mu", ylab = "mu", xlab = "iteration")
lines(1:2000, test_result$mu_mat[-c(1:1000), 2], col = "blue")
lines(1:2000, test_result$mu_mat[-c(1:1000), 3], col = "salmon")
plot(test_result$mu_mat[-c(1:1000), 1], type = "l", ylim = c(5, 20),
col = "red", main = "mu", ylab = "mu", xlab = "iteration")
lines(1:2000, test_result$mu_mat[-c(1:1000), 2], col = "blue")
lines(1:2000, test_result$mu_mat[-c(1:1000), 3], col = "salmon")
lines(1:2000, test_result$mu_mat[-c(1:1000), 4], col = "green")
lines(1:2000, test_result$mu_mat[-c(1:1000), 5], col = "grey")
plot(test_result$mu_mat[-c(1:1000), 1], type = "l", ylim = c(-5, 50),
col = "red", main = "mu", ylab = "mu", xlab = "iteration")
lines(1:2000, test_result$mu_mat[-c(1:1000), 2], col = "blue")
lines(1:2000, test_result$mu_mat[-c(1:1000), 3], col = "salmon")
lines(1:2000, test_result$mu_mat[-c(1:1000), 4], col = "green")
lines(1:2000, test_result$mu_mat[-c(1:1000), 5], col = "grey")
set.seed(2345)
### Run the model: (1)
test_result <- fmm_model_R(iter = 5000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, N))
### salso result: (1)
table(salso(test_result$assign_mat[-c(1:3000), ], maxNClusters = K), ci_true)
plot(test_result$mu_mat[-c(1:3000), 1], type = "l", ylim = c(-5, 50),
col = "red", main = "mu", ylab = "mu", xlab = "iteration")
lines(1:2000, test_result$mu_mat[-c(1:3000), 2], col = "blue")
lines(1:2000, test_result$mu_mat[-c(1:3000), 3], col = "salmon")
lines(1:2000, test_result$mu_mat[-c(1:3000), 4], col = "green")
lines(1:2000, test_result$mu_mat[-c(1:3000), 5], col = "grey")
plot(test_result$s2_mat[-c(1:3000), 1], type = "l", ylim = c(-5, 50),
col = "red", main = "mu", ylab = "mu", xlab = "iteration")
lines(1:2000, test_result$s2_mat[-c(1:3000), 2], col = "blue")
lines(1:2000, test_result$s2_mat[-c(1:3000), 3], col = "salmon")
lines(1:2000, test_result$s2_mat[-c(1:3000), 4], col = "green")
lines(1:2000, test_result$s2_mat[-c(1:3000), 5], col = "grey")
plot(test_result$mixing_mat[-c(1:3000), 1], type = "l", ylim = c(0, 1),
col = "red", main = "mu", ylab = "mu", xlab = "iteration")
lines(1:2000, test_result$mixing_mat[-c(1:3000), 2], col = "blue")
lines(1:2000, test_result$mixing_mat[-c(1:3000), 3], col = "salmon")
lines(1:2000, test_result$mixing_mat[-c(1:3000), 4], col = "green")
lines(1:2000, test_result$mixing_mat[-c(1:3000), 5], col = "grey")
set.seed(352)
registerDoParallel(detectCores() - 1)
library(foreach)
library(doParallel)
library(doRNG)
set.seed(352)
registerDoParallel(detectCores() - 1)
list_result <- foreach(i = 1:10) %dorng%{
N <- 500
K <- 3
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(10, 20, 30)[ci_true], 1)
test_result <- fmm_model_R(iter = 3000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, N))
return(test_result)
}
stopImplicitCluster()
list_result
set.seed(352)
registerDoParallel(detectCores() - 1)
list_result <- foreach(i = 1:10) %dorng%{
N <- 500
K <- 3
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(10, 20, 30)[ci_true], 1)
test_result <- fmm_model_R(iter = 3000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, N))
return(list(clus_assign = test_result$assign_mat, ci_true = ci_true))
}
stopImplicitCluster()
list_result
list_result[[1]]
list_result[[1]]$clus_assign[-c(1:1000), ]
salso(list_result[[1]]$clus_assign[-c(1:1000), ])
salso(list_result[[1]]$clus_assign[-c(1:1000), ], maxNClusters = K)
library(mclustcomp)
mclustcomp(salso(list_result[[1]]$clus_assign[-c(1:1000), ], maxNClusters = K),
list_result[[1]]$ci_true)
ci_assign <- as.numeric(salso(list_result[[1]]$clus_assign[-c(1:1000), ],
maxNClusters = K))
mclustcomp(ci_assign, list_result[[1]]$ci_true)
mclustcomp(ci_assign, list_result[[1]]$ci_true, "jaccard")
?mclustcomp
mclustcomp(ci_assign, list_result[[1]]$ci_true, "jaccard")
mclustcomp(ci_assign, list_result[[1]]$ci_true, "jaccard")$score
jac_vec <- rep(NA, 10)
for(i in 1:10){
ci_assign <- as.numeric(salso(list_result[[i]]$clus_assign[-c(1:1000), ],
maxNClusters = K))
jac_vec[i] <- mclustcomp(ci_assign, list_result[[i]]$ci_true, "jaccard")$score
}
jac_vec
jac_vec <- rep(NA, 10)
for(i in 1:10){
ci_assign <- as.numeric(salso(list_result[[i]]$clus_assign[-c(1:1000), ],
maxNClusters = K))
jac_vec[i] <- mclustcomp(ci_assign, list_result[[i]]$ci_true, "jaccard")$score
}
mean(jac_vec)
sd(jac_vec)
jac_vec <- rep(NA, 10)
for(i in 1:10){
ci_assign <- as.numeric(salso(list_result[[i]]$clus_assign[-c(1:1000), ],
maxNClusters = K))
jac_vec[i] <- mclustcomp(ci_assign, list_result[[i]]$ci_true, "jaccard")$score
}
mean(jac_vec)
sd(jac_vec)
jac_vec
as.numeric(salso(list_result[[3]]$clus_assign[-c(1:1000), ],
maxNClusters = K))
as.numeric(salso(list_result[[3]]$clus_assign[-c(1:1000), ], maxNClusters = K))
as.numeric(salso(list_result[[3]]$clus_assign[-c(1:2000), ], maxNClusters = K))
jac_vec <- rep(NA, 10)
for(i in 1:10){
ci_assign <- as.numeric(salso(list_result[[i]]$clus_assign[-c(1:1000), ],
maxNClusters = K))
jac_vec[i] <- mclustcomp(ci_assign, list_result[[i]]$ci_true, "jaccard")$score
}
mean(jac_vec)
sd(jac_vec)
jac_vec <- rep(NA, 10)
for(i in 1:10){
ci_assign <- as.numeric(salso(list_result[[i]]$clus_assign[-c(1:1000), ],
maxNClusters = K))
jac_vec[i] <- mclustcomp(ci_assign, list_result[[i]]$ci_true, "jaccard")$score
}
mean(jac_vec)
sd(jac_vec)
jac_vec
jac_vec
ci_assign <- as.numeric(salso(list_result[[3]]$clus_assign[-c(1:2000), ],
maxNClusters = K))
mclustcomp(ci_assign, list_result[[3]]$ci_true, "jaccard")$score
set.seed(352)
registerDoParallel(detectCores() - 1)
list_result <- foreach(i = 1:10) %dorng%{
N <- 500
K <- 3
ci_true <- sample(1:K, N, replace = TRUE, prob = c(0.25, 0.35, 0.4))
dat_sim <- rnorm(N, c(7, 12, 17)[ci_true], 1)
test_result <- fmm_model_R(iter = 3000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, N))
return(list(clus_assign = test_result$assign_mat, ci_true = ci_true))
}
stopImplicitCluster()
jac_vec <- rep(NA, 10)
for(i in 1:10){
ci_assign <- as.numeric(salso(list_result[[i]]$clus_assign[-c(1:1000), ],
maxNClusters = K))
jac_vec[i] <- mclustcomp(ci_assign, list_result[[i]]$ci_true, "jaccard")$score
}
mean(jac_vec)
sd(jac_vec)
set.seed(352)
registerDoParallel(detectCores() - 1)
list_result <- foreach(i = 1:10) %dorng%{
N <- 500
K <- 5
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(0, 7.5, 15, 25, 35)[ci_true], 1)
test_result <- fmm_model_R(iter = 5000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, N))
return(list(clus_assign = test_result$assign_mat, ci_true = ci_true))
}
stopImplicitCluster()
jac_vec <- rep(NA, 10)
for(i in 1:10){
ci_assign <- as.numeric(salso(list_result[[i]]$clus_assign[-c(1:4000), ],
maxNClusters = K))
jac_vec[i] <- mclustcomp(ci_assign, list_result[[i]]$ci_true, "jaccard")$score
}
mean(jac_vec)
sd(jac_vec)
jac_vec
set.seed(352)
registerDoParallel(detectCores() - 1)
list_result <- foreach(i = 1:10) %dorng%{
N <- 500
K <- 5
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(0, 7.5, 15, 25, 35)[ci_true], 1)
test_result <- fmm_model_R(iter = 7500, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, N))
return(list(clus_assign = test_result$assign_mat, ci_true = ci_true))
}
stopImplicitCluster()
jac_vec <- rep(NA, 10)
for(i in 1:10){
ci_assign <- as.numeric(salso(list_result[[i]]$clus_assign[-c(1:5000), ],
maxNClusters = K))
jac_vec[i] <- mclustcomp(ci_assign, list_result[[i]]$ci_true, "jaccard")$score
}
mean(jac_vec)
sd(jac_vec)
jac_vec
set.seed(352)
registerDoParallel(detectCores() - 1)
list_result <- foreach(i = 1:10) %dorng%{
N <- 500
K <- 5
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(0, 7.5, 15, 25, 35)[ci_true], 1)
test_result <- fmm_model_R(iter = 10000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, N))
return(list(clus_assign = test_result$assign_mat, ci_true = ci_true))
}
stopImplicitCluster()
jac_vec <- rep(NA, 10)
for(i in 1:10){
ci_assign <- as.numeric(salso(list_result[[i]]$clus_assign[-c(1:7000), ],
maxNClusters = K))
jac_vec[i] <- mclustcomp(ci_assign, list_result[[i]]$ci_true, "jaccard")$score
}
mean(jac_vec)
sd(jac_vec)
jac_vec
jac_vec <- rep(NA, 10)
for(i in 1:10){
ci_assign <- as.numeric(salso(list_result[[i]]$clus_assign[-c(1:8000), ],
maxNClusters = K))
jac_vec[i] <- mclustcomp(ci_assign, list_result[[i]]$ci_true, "jaccard")$score
}
mean(jac_vec)
sd(jac_vec)
jac_vec
jac_vec <- rep(NA, 10)
for(i in 1:10){
ci_assign <- as.numeric(salso(list_result[[i]]$clus_assign[-c(1:9000), ],
maxNClusters = K))
jac_vec[i] <- mclustcomp(ci_assign, list_result[[i]]$ci_true, "jaccard")$score
}
mean(jac_vec)
sd(jac_vec)
jac_vec <- rep(NA, 10)
for(i in 1:10){
ci_assign <- as.numeric(salso(list_result[[i]]$clus_assign[-c(1:9500), ],
maxNClusters = K))
jac_vec[i] <- mclustcomp(ci_assign, list_result[[i]]$ci_true, "jaccard")$score
}
mean(jac_vec)
sd(jac_vec)
set.seed(352)
registerDoParallel(detectCores() - 1)
list_result <- foreach(i = 1:10) %dorng%{
N <- 500
K <- 5
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(0, 7.5, 15, 25, 35)[ci_true], 1)
test_result <- fmm_model_R(iter = 5000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, N))
return(list(clus_assign = test_result$assign_mat, ci_true = ci_true))
}
stopImplicitCluster()
jac_vec <- rep(NA, 10)
for(i in 1:10){
ci_assign <- as.numeric(salso(list_result[[i]]$clus_assign[-c(1:4000), ],
maxNClusters = K))
jac_vec[i] <- mclustcomp(ci_assign, list_result[[i]]$ci_true, "jaccard")$score
}
mean(jac_vec)
sd(jac_vec)
jac_vec
