data_test <- c(rnorm(100, -10, 4), rnorm(100, 0, 1), rnorm(100, 10, 10))
ci_actual <- factor(sort(rep(1:3, 100)))
data.frame(x = data_test, ci_actual) %>%
ggplot(aes(x = x, fill = ci_actual)) +
geom_histogram(bins = 30, alpha = 0.75) +
theme_bw()
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(100, -10, 4), rnorm(100, 0, 1), rnorm(100, 15, 10))
ci_actual <- factor(sort(rep(1:3, 100)))
data.frame(x = data_test, ci_actual) %>%
ggplot(aes(x = x, fill = ci_actual)) +
geom_histogram(bins = 30, alpha = 0.75) +
theme_bw()
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(100, -10, 4), rnorm(100, 0, 1), rnorm(100, 15, 10))
ci_actual <- factor(sort(rep(1:3, 100)))
data.frame(x = data_test, ci_actual) %>%
ggplot(aes(x = x, fill = ci_actual)) +
geom_histogram(bins = 30, alpha = 0.75) +
theme_bw()
## Analysis
K <- 7
K_init <- 2
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(1, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, data_test, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 5000, 1000)
Sys.time() - start_time
table(summary(salso(result[2001:5000, ]))$estimate)
table(ci_actual, summary(salso(result[2001:5000, ]))$estimate)
### Required Commands for build the packages: ----------------------------------
uninstall()
### Required Library: ----------------------------------------------------------
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(LaplacesDemon)
library(mvtnorm)
library(DirichletReg)
library(salso)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
##### Data Simulation
set.seed(31807)
data_test <- rbind(rmvnorm(100, c(3, 3)), rmvnorm(100, c(-3, -3)))
plot(data_test)
K <- 5
mu_0_vec <- matrix(1:K, K, 2)
lambda_0_vec <- rep(0.01, K)
nu_0_vec <- rep(50, K)
L_array <- replicate(5, diag(2))
xi_test <- rep(1, 5)
expand_step_multi(K, rep(1, 100), rep(2, 5), rep(1, 5), data_test, mu_0_vec,
lambda_0_vec, nu_0_vec, L_array, 10, 10)
log_allocate_prob_multi(0, rep(1:2, 50), xi_test, data_test, mu_0_vec,
lambda_0_vec, nu_0_vec, L_array, c(1, 2))
cluster_assign_multi(K, rep(1:4, 25), xi_test, data_test, rep(1, 5), mu_0_vec,
lambda_0_vec, nu_0_vec, L_array)
for(i in 1:500){
t <- split_merge_multi(K, rep(1:4, 25), c(2, 2, 2, 2, 0), xi_test, data_test,
mu_0_vec, lambda_0_vec, nu_0_vec, L_array, 10, 10, 2)
}
t
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
for(i in 1:500){
t <- split_merge_multi(K, rep(1:4, 25), c(2, 2, 2, 2, 0), xi_test, data_test,
mu_0_vec, lambda_0_vec, nu_0_vec, L_array, 10, 10, 2)
}
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
rm(list = ls())
##### Data Simulation
set.seed(31807)
data_test <- rbind(rmvnorm(100, c(3, 3)), rmvnorm(100, c(-3, -3)))
plot(data_test)
K <- 5
mu_0_vec <- matrix(1:K, K, 2)
lambda_0_vec <- rep(0.01, K)
nu_0_vec <- rep(50, K)
L_array <- replicate(5, diag(2))
xi_test <- rep(1, 5)
set.seed(31807)
result <- normal_multi(K, 1, data_test, xi_test, mu_0_vec, lambda_0_vec,
nu_0_vec, L_array, 10, 10, 10, 10000, 1000)
### Univariate: ----------------------------------------------------------------
#### Data Simulation
rm(list = ls())
set.seed(31807)
ci <- sample(1:5, 100, TRUE)
a_sigma <- (2:6)/2
b_sigma <- (6:2)/2
sigma2_vec <- rinvgamma(5, a_sigma, 1/b_sigma)
lambda_vec <- (1:5)/100
mu0_vec <- c(10, 30, 50, 70, 90)
data_test <- rep(NA, 100)
ci_test <- rep(1:4, 25)
xi <- rep(5, 5)
alpha_test <- c(10, 10, 10, 10, 0)
for(i in 1:100){
data_test[i] <- rnorm(1, mu0_vec[ci[i]],
sqrt(sigma2_vec[ci[i]]/lambda_vec[ci[i]]))
}
log_marginal_univariate(data_test[3], a_sigma[1], b_sigma[1],
lambda_vec[1], mu0_vec[1])
expand_step_univariate(5, rep(1:4, 25), c(10, 10, 10, 10, 0),
rep(1, 5),data_test, mu0_vec, a_sigma, b_sigma,
lambda_vec, 10, 10)
log_allocate_prob_univariate(80, rep(3:4, 50), xi, data_test, a_sigma, b_sigma,
lambda_vec, mu0_vec, c(1, 2, 3, 4, 5, 10))
table(cluster_assign_univariate(5, ci_test, xi, data_test, alpha_test, mu0_vec, a_sigma,
b_sigma, lambda_vec)$new_assign)
for(j in 1:500){
split_merge_univariate(5, ci_test[1:20], alpha_test, xi, data_test[1:20], mu0_vec,
a_sigma, b_sigma, lambda_vec, 10, 10, 10)
}
set.seed(31807)
result <- normal_uni(5, 3, data_test, xi, mu0_vec, a_sigma, b_sigma, lambda_vec,
10, 10, 10, 300, 50)
salso(result)
summary(salso(result))$estimate
table(factor(ci), summary(salso(result))$estimate)
set.seed(31807)
result <- normal_uni(5, 3, data_test, xi, mu0_vec, a_sigma, b_sigma, lambda_vec,
100, 10, 10, 300, 50)
table(factor(ci), summary(salso(result))$estimate)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
#### Multivariate
rm(list = ls())
##### Data Simulation
set.seed(31807)
data_test <- rbind(rmvnorm(100, c(3, 3)), rmvnorm(100, c(-3, -3)))
plot(data_test)
K <- 5
mu_0_vec <- matrix(1:K, K, 2)
lambda_0_vec <- rep(0.01, K)
nu_0_vec <- rep(50, K)
L_array <- replicate(5, diag(2))
xi_test <- rep(1, 5)
expand_step_multi(K, rep(1, 100), rep(2, 5), rep(1, 5), data_test, mu_0_vec,
lambda_0_vec, nu_0_vec, L_array, 10, 10)
log_allocate_prob_multi(0, rep(1:2, 50), xi_test, data_test, mu_0_vec,
lambda_0_vec, nu_0_vec, L_array, c(1, 2))
cluster_assign_multi(K, rep(1:4, 25), xi_test, data_test, rep(1, 5), mu_0_vec,
lambda_0_vec, nu_0_vec, L_array)
for(i in 1:500){
t <- split_merge_multi(K, rep(1:4, 25), c(2, 2, 2, 2, 0), xi_test, data_test,
mu_0_vec, lambda_0_vec, nu_0_vec, L_array, 10, 10, 2)
}
result <- normal_multi(K, 1, data_test, xi_test, mu_0_vec, lambda_0_vec,
nu_0_vec, L_array, 10, 10, 10, 10000, 1000)
data_test
xi_test
mu_0_vec
lambda_0_vec
nu_0_vec
L_array
result <- normal_multi(K, 10, data_test, xi_test, mu_0_vec, lambda_0_vec,
nu_0_vec, L_array, 10, 10, 10, 10000, 1000)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
#### Multivariate
rm(list = ls())
##### Data Simulation
set.seed(31807)
data_test <- rbind(rmvnorm(100, c(3, 3)), rmvnorm(100, c(-3, -3)))
plot(data_test)
K <- 5
mu_0_vec <- matrix(1:K, K, 2)
lambda_0_vec <- rep(0.01, K)
nu_0_vec <- rep(50, K)
L_array <- replicate(5, diag(2))
xi_test <- rep(1, 5)
expand_step_multi(K, rep(1, 100), rep(2, 5), rep(1, 5), data_test, mu_0_vec,
lambda_0_vec, nu_0_vec, L_array, 10, 10)
log_allocate_prob_multi(0, rep(1:2, 50), xi_test, data_test, mu_0_vec,
lambda_0_vec, nu_0_vec, L_array, c(1, 2))
cluster_assign_multi(K, rep(1:4, 25), xi_test, data_test, rep(1, 5), mu_0_vec,
lambda_0_vec, nu_0_vec, L_array)
for(i in 1:500){
t <- split_merge_multi(K, rep(1:4, 25), c(2, 2, 2, 2, 0), xi_test, data_test,
mu_0_vec, lambda_0_vec, nu_0_vec, L_array, 10, 10, 2)
}
set.seed(31807)
result <- normal_multi(K, 10, data_test, xi_test, mu_0_vec, lambda_0_vec,
nu_0_vec, L_array, 10, 10, 10, 10000, 1000)
result
salso(result[2001:10000, ])
### Required Library: ----------------------------------------------------------
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(LaplacesDemon)
library(mvtnorm)
library(DirichletReg)
library(salso)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
knitr::opts_chunk$set(echo = TRUE)
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(LaplacesDemon)
library(salso)
library(tidyverse)
library(ggplot2)
library(ClusterNormal)
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(50, -5, 1), rnorm(75, 10, 1))
data.frame(x = data_test, y = c(rep(1, 50), rep(2, 75))) %>%
ggplot(aes(x = x, fill = factor(y))) +
geom_histogram(bins = 30) +
theme_bw()
## Analysis
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(1, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, data_test, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 5000, 1000)
Sys.time() - start_time
table(factor(c(rep(1, 50), rep(2, 75))), summary(salso(result[2001:5000, ]))$estimate)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(50, -5, 1), rnorm(75, 10, 1))
data.frame(x = data_test, y = c(rep(1, 50), rep(2, 75))) %>%
ggplot(aes(x = x, fill = factor(y))) +
geom_histogram(bins = 30) +
theme_bw()
## Analysis
K <- 5
K_init <- 3
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(1, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, data_test, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 5000, 1000)
Sys.time() - start_time
table(factor(c(rep(1, 50), rep(2, 75))), summary(salso(result[2001:5000, ]))$estimate)
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(100, -10, 4), rnorm(100, 0, 1), rnorm(100, 15, 10))
ci_actual <- factor(sort(rep(1:3, 100)))
data.frame(x = data_test, ci_actual) %>%
ggplot(aes(x = x, fill = ci_actual)) +
geom_histogram(bins = 30, alpha = 0.75) +
theme_bw()
## Analysis
K <- 7
K_init <- 2
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(1, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, data_test, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 5000, 500)
Sys.time() - start_time
table(ci_actual, summary(salso(result[2001:5000, ]))$estimate)
library(mvtnorm)
rm(list = ls())
rmvnorm(50, c(5, 0))
rbind(rmvnorm(50, c(5, 0)), rmvnorm(50, c(0, 5)))
plot(rbind(rmvnorm(50, c(5, 0)), rmvnorm(50, c(0, 5))))
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(50, c(5, 0)), rmvnorm(50, c(0, 5)))
plot(data_test)
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(50, c(5, 0)), rmvnorm(50, c(0, 5)))
plot(data_test)
replicate(diag(2), K)
?replicate
replicate(K, diag(2))
set.seed(31807)
K <- 5
xi <- rep(10, K)
L_0 <- replicate(K, diag(2))
L_0
data_test <- rbind(rmvnorm(50, c(5, 0), matrix(1, 2, 2)), rmvnorm(50, c(0, 5)))
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(50, c(5, 0), matrix(1, 2, 2)), rmvnorm(50, c(0, 5)))
plot(data_test)
data_test <- rbind(rmvnorm(50, c(5, 0), matrix(c(5, 1, 1, 5), 2, 2)), rmvnorm(50, c(0, 5)))
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(50, c(5, 0), matrix(c(5, 1, 1, 5), 2, 2)), rmvnorm(50, c(0, 5)))
plot(data_test)
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(50, c(5, 0)), rmvnorm(50, c(0, 5)))
plot(data_test)
K <- 5
xi <- rep(10, K)
matrix(0, 2, K)
matrix(0, K, 2)
### Analysis
set.seed(31807)
K <- 5
xi <- rep(10, K)
mu_0 <- matrix(0, K, 2)
lambda_0 <- rep(0.01, K)
nu_0 <- rep(1, K)
L_0 <- replicate(K, diag(2))
result <- normal_multi(K, 1, data_test, xi, mu_0, lambda_0, nu_0, L_0,
1, 1, 10, 5000, 1000)
result
result[2001:5000, ]
salso(result[2001:5000, ])
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(200, c(5, 0)), rmvnorm(2000, c(0, 5)))
plot(data_test)
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(200, c(5, 0)), rmvnorm(200, c(0, 5)))
plot(data_test)
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(200, c(-5, 0)), rmvnorm(200, c(0, 5)))
plot(data_test)
matrix(c(5, 10, 10, 5), 2, 2))
matrix(c(5, 10, 10, 5), 2, 2)
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(200, c(-5, 0), matrix(c(5, 10, 10, 5), 2, 2)),
rmvnorm(200, c(0, 5)))
plot(data_test)
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(200, c(-5, 0), matrix(c(5, 0.3, 0.3, 5), 2, 2)),
rmvnorm(200, c(0, 5)))
plot(data_test)
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(200, c(-5, 0), matrix(c(5, 0.3, 0.3, 5), 2, 2)),
rmvnorm(200, c(0, 5), matrix(c(1, 0.5, 0.5, 1), 2, 2)))
plot(data_test)
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(200, c(-5, 0), matrix(c(5, 2, 2, 5), 2, 2)),
rmvnorm(200, c(0, 5), matrix(c(1, 0.5, 0.5, 1), 2, 2)))
plot(data_test)
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(200, c(-5, 0), matrix(c(5, 2, 2, 5), 2, 2)),
rmvnorm(200, c(0, 5), matrix(c(1, 0.5, 0.5, 1), 2, 2)))
ci_actual <- sort(rep(1:2, 200))
plot(data_test)
data_test <- rbind(rmvnorm(100, c(-5, 0), matrix(c(5, 2, 2, 5), 2, 2)),
rmvnorm(100, c(0, 5), matrix(c(1, 0.5, 0.5, 1), 2, 2)),
rmvnorm(100, c(5, 5)))
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(100, c(-5, 0), matrix(c(5, 2, 2, 5), 2, 2)),
rmvnorm(100, c(0, 5), matrix(c(1, 0.5, 0.5, 1), 2, 2)),
rmvnorm(100, c(5, 5)))
ci_actual <- sort(rep(1:3, 200))
plot(data_test)
data.frame(data_test)
data.frame(data_test, ci_actual) %>%
ggplot(aes(x = X1, y= X2)) +
geom_point()
geom_point()
data.frame(data_test, ci_actual) %>%
ggplot(aes(x = X1, y = X2, fill = ci_actual)) +
geom_point()
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(100, c(-5, 0), matrix(c(5, 2, 2, 5), 2, 2)),
rmvnorm(100, c(0, 5), matrix(c(1, 0.5, 0.5, 1), 2, 2)),
rmvnorm(100, c(5, 5)))
ci_actual <- factor(sort(rep(1:3, 200)))
data.frame(data_test, ci_actual) %>%
ggplot(aes(x = X1, y = X2, fill = ci_actual)) +
geom_point()
plot(data_test)
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(100, c(-5, 0), matrix(c(5, 2, 2, 5), 2, 2)),
rmvnorm(100, c(0, 5), matrix(c(1, 0.5, 0.5, 1), 2, 2)),
rmvnorm(100, c(5, 5)))
ci_actual <- factor(sort(rep(1:3, 200)))
data.frame(data_test, ci_actual) %>%
ggplot(aes(x = X1, y = X2, color = ci_actual)) +
geom_point()
plot(data_test)
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(100, c(-5, 0), matrix(c(5, 2, 2, 5), 2, 2)),
rmvnorm(100, c(0, 5), matrix(c(1, 0.5, 0.5, 1), 2, 2)),
rmvnorm(100, c(5, 5)))
ci_actual <- factor(sort(rep(1:3, 100)))
data.frame(data_test, ci_actual) %>%
ggplot(aes(x = X1, y = X2, color = ci_actual)) +
geom_point()
plot(data_test)
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(100, c(-5, 0), matrix(c(5, 2, 2, 5), 2, 2)),
rmvnorm(100, c(0, 5), matrix(c(1, 0.5, 0.5, 1), 2, 2)),
rmvnorm(100, c(5, 5), matrix(c(4, 3, 3, 3), 2, 2)))
ci_actual <- factor(sort(rep(1:3, 100)))
data.frame(data_test, ci_actual) %>%
ggplot(aes(x = X1, y = X2, color = ci_actual)) +
geom_point()
plot(data_test)
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(100, c(-5, 0), matrix(c(5, 2, 2, 5), 2, 2)),
rmvnorm(100, c(0, 5), matrix(c(1, 0.5, 0.5, 1), 2, 2)),
rmvnorm(100, c(5, 5), matrix(c(4, 3, 3, 3), 2, 2)))
ci_actual <- factor(sort(rep(1:3, 100)))
data.frame(data_test, ci_actual) %>%
ggplot(aes(x = X1, y = X2, color = ci_actual)) +
geom_point()
### Analysis
set.seed(31807)
K <- 7
xi <- rep(10, K)
mu_0 <- matrix(0, K, 2)
lambda_0 <- rep(0.01, K)
nu_0 <- rep(1, K)
L_0 <- replicate(K, diag(2))
result <- normal_multi(K, K, data_test, xi, mu_0, lambda_0, nu_0, L_0,
1, 1, 10, 5000, 1000)
salso(result[2001:5000, ])
summary(salso(result[2001:5000, ]))$estimate
table(summary(salso(result[2001:5000, ]))$estimate)
table(ci_actual, summary(salso(result[2001:5000, ]))$estimate)
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(50, c(0, 0, 0)),
rmvnorm(50, c(0, 5, 0)),
rmvnorm(50, c(5, 5, 5))
ci_actual <- factor(sort(rep(1:3, 50)))
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(50, c(0, 0, 0)),
rmvnorm(50, c(0, 5, 0)),
rmvnorm(50, c(5, 5, 5)))
ci_actual <- factor(sort(rep(1:3, 50)))
rm(list = ls())
set.seed(31807)
data_test <- rbind(rmvnorm(50, c(0, 0, 0)),
rmvnorm(50, c(0, 5, 0)),
rmvnorm(50, c(5, 5, 5)))
ci_actual <- factor(sort(rep(1:3, 50)))
### Analysis
set.seed(31807)
K <- 10
xi <- rep(10, K)
mu_0 <- matrix(0, K, 3)
lambda_0 <- rep(10, K)
nu_0 <- rep(1, K)
L_0 <- replicate(K, diag(3))
result <- normal_multi(K, K, data_test, xi, mu_0, lambda_0, nu_0, L_0,
1, 1, 10, 5000, 1000)
table(ci_actual, summary(salso(result[2001:5000, ]))$estimate)
