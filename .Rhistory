galaxy
data("galaxy")
galaxy
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(10, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(50, K)
b_sigma_vec <- rep(50, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
galaxy
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(10, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(50, K)
b_sigma_vec <- rep(50, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
result$assign
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(10, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(1, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(100, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(500, K)
b_sigma_vec <- rep(500, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(1, K)
mu0_vec <- rep(100, K)
a_sigma_vec <- rep(500, K)
b_sigma_vec <- rep(500, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
salso(result$assign[-(1:2000), ])
result$alpha
result$alpha[9995:10000, ]
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(0.01, K)
b_sigma_vec <- rep(0.01, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
result$alpha[9995:10000, ]
salso(result$assign[-(1:2000), ])
hist(rgamma(1000, 0.01, 0.01))
hist(1/rgamma(1000, 0.01, 0.01))
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(100, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(0.01, K)
b_sigma_vec <- rep(0.01, K)
lambda_vec <- rep(100, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
result$alpha[9995:10000, ]
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(100, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(0.01, K)
b_sigma_vec <- rep(0.01, K)
lambda_vec <- rep(0.01, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
result$alpha[9995:10000, ]
salso(result$assign[-(1:2000), ])
hist(1/rgamma(1000, 50, 1000))
hist(1/rgamma(1000, 1000, 50))
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(50, K)
b_sigma_vec <- rep(1000, K)
lambda_vec <- rep(0.01, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
result$alpha[9995:10000, ]
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 5
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(500, K)
b_sigma_vec <- rep(1000, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
result$alpha[9995:10000, ]
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 1
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(500, K)
b_sigma_vec <- rep(500, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
result$alpha[9995:10000, ]
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 1
xi <- rep(1, K)
mu0_vec <- rep(25000, K)
a_sigma_vec <- rep(0.01, K)
b_sigma_vec <- rep(0.01, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
result$alpha[9995:10000, ]
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 1
xi <- rep(1, K)
mu0_vec <- rep(25000, K)
a_sigma_vec <- rep(1000, K)
b_sigma_vec <- rep(1000, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
result$alpha[9995:10000, ]
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 1
xi <- rep(1, K)
mu0_vec <- rep(25000, K)
a_sigma_vec <- rep(10000, K)
b_sigma_vec <- rep(10000, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, galaxy$speed, xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
salso(result$assign[-(1:2000), ])
rm(list = ls())
data("galaxy")
galaxy
## Analysis
K <- 10
K_init <- 1
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(100, K)
b_sigma_vec <- rep(100, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result <- normal_uni(K, K_init, scale(galaxy$speed), xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 10, 10, 10, 10000, 1000)
Sys.time() - start_time
salso(result$assign[-(1:2000), ])
scale(galaxy$speed)
hist(1/rgamma(1000, 100, 100))
### Required Library: ----------------------------------------------------------
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(LaplacesDemon)
library(mvtnorm)
library(DirichletReg)
library(salso)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
set.seed(20882)
data_test <- c(rnorm(3, -5, 1), rnorm(2, 10, 1))
## Analysis
K <- 5
xi <- rep(1, K)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
normal_SPMM_uni(data_test, xi, mu0_vec, a_sigma_vec, b_sigma_vec, lambda_vec,
1000, 100)
## Analysis
xi <- c(1, 1, 0.01, 0.01, 0.01)
normal_SPMM_uni(data_test, xi, mu0_vec, a_sigma_vec, b_sigma_vec, lambda_vec,
1000, 100)
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
### SPMM: ----------------------------------------------------------------------
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(3, -5, 1), rnorm(2, 10, 1))
## Analysis
xi <- c(1, 1, 0.01, 0.01, 0.01)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
normal_SPMM_uni(data_test, xi, mu0_vec, a_sigma_vec, b_sigma_vec, lambda_vec,
1000, 100)
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
### SPMM: ----------------------------------------------------------------------
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(3, -5, 1), rnorm(2, 10, 1))
## Analysis
xi <- c(1, 1, 0.01, 0.01, 0.01)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
normal_SPMM_uni(data_test, xi, mu0_vec, a_sigma_vec, b_sigma_vec, lambda_vec,
1000, 100)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
### SPMM: ----------------------------------------------------------------------
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(3, -5, 1), rnorm(2, 10, 1))
## Analysis
xi <- c(1, 1, 0.01, 0.01, 0.01)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
normal_SPMM_uni(data_test, xi, mu0_vec, a_sigma_vec, b_sigma_vec, lambda_vec,
1000, 100)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(3, -5, 1), rnorm(2, 10, 1))
## Analysis
xi <- c(1, 1, 0.01, 0.01, 0.01)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- 25:29
normal_SPMM_uni(data_test, xi, mu0_vec, a_sigma_vec, b_sigma_vec, lambda_vec,
1000, 100)
### SPMM: ----------------------------------------------------------------------
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(3, -5, 1), rnorm(2, 10, 1))
## Analysis
xi <- c(1, 1, 0.1, 1, 1)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- rep(1, 5)
normal_SPMM_uni(data_test, xi, mu0_vec, a_sigma_vec, b_sigma_vec, lambda_vec,
1000, 100)
### SPMM: ----------------------------------------------------------------------
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(3, -5, 1), rnorm(2, 10, 1))
## Analysis
xi <- c(1, 1, 1, 1, 1)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- rep(1, 5)
normal_SPMM_uni(data_test, xi, mu0_vec, a_sigma_vec, b_sigma_vec, lambda_vec,
1000, 100)
### SPMM: ----------------------------------------------------------------------
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(100, -5, 1), rnorm(100, 10, 1))
## Analysis
xi <- c(1, 1, 1, 1, 1)
mu0_vec <- 1:5 * 10
a_sigma_vec <- 1:5 / 100
b_sigma_vec <- 1:5 * 10
lambda_vec <- rep(1, 5)
normal_SPMM_uni(data_test, xi, mu0_vec, a_sigma_vec, b_sigma_vec, lambda_vec,
1000, 100)
### Required Commands for build the packages: ----------------------------------
uninstall()
compileAttributes()
build()
compileAttributes()
build()
install()
library(ClusterNormal)
getwd()
getwd()
library(doParallel)
registerDoParallel(detectCores() - 1)
foreach(t = 1:30) %dopar%
{
rnorm(500)
}
stopImplicitCluster()
getwd()
library(doParallel)
path <- getwd()
dir.create(paste0(path, "/data"))
path <- paste0(path, "/data")
registerDoParallel(detectCores() - 1)
set.seed(31807, kind = "L'Ecuyer-CMRG")
foreach(t = 1:5) %dopar%
{
dat <- rnorm(500)
save(dat, file = paste0(path, "/dat", t, ".RData"))
}
stopImplicitCluster()
### Call the library
library(ClusterNormal)
library(doParallel)
library(salso)
library(mclustcomp)
### Create global path name
path_data <- paste0(getwd(), "/Data/")
path_result <- paste0(getwd(), "/Result/")
if(dir.exists(path_result)){
unlink(path_result, recursive = TRUE)
}
dir.create(path_result)
path_aa <- paste0(path_result, "Active_Accept/")
path_clus <- paste0(path_result, "Cluster_Assign/")
path_conf_mat <- paste0(path_result, "Conf_Mat/")
path_sum <- paste0(path_result, "Summary/")
dir.create(path_aa)
dir.create(path_clus)
dir.create(path_conf_mat)
dir.create(path_sum)
path_data
knitr::opts_chunk$set(echo = TRUE)
library(Rcpp)
library(RcppArmadillo)
library(devtools)
library(salso)
library(tidyverse)
library(ggplot2)
library(mvtnorm)
### Required Commands for build the packages
uninstall()
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
rm(list = ls())
## Data Simulation
set.seed(20882)
data_test <- c(rnorm(250, -5, 1), rnorm(250, 5, 1))
ci_actual <- c(rep(1, 250), rep(2, 250))
data.frame(x = data_test, y = ci_actual) %>%
ggplot(aes(x = x, group = factor(y))) +
geom_histogram(aes(y = ..density..), bins = 30, alpha = 0.75) +
geom_density(lwd = 1, colour = 4, fill = 4, alpha = 0.25) +
theme_bw()
## Analysis
K <- 10
K_init <- 1
xi <- rep(1, K)
mu0_vec <- rep(0, K)
a_sigma_vec <- rep(1, K)
b_sigma_vec <- rep(1, K)
lambda_vec <- rep(1, K)
start_time <- Sys.time()
result_old <- normal_uni(K, K_init, scale(data_test), xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 1, 1, 10, 10000, 1000)
Sys.time() - start_time
table(summary(salso(result_old$assign[-(1:5000), ]))$estimate)
table(data.frame(result_old$Split, result_old$Merge, result_old$SM_accept))
start_time <- Sys.time()
result_old <- normal_uni_new(K, K_init, scale(data_test), xi, mu0_vec, a_sigma_vec,
b_sigma_vec, lambda_vec, 1, 1, 10, 10000, 1000)
Sys.time() - start_time
table(summary(salso(result_old$assign[-(1:5000), ]))$estimate)
table(data.frame(result_old$Split, result_old$Merge, result_old$SM_accept))
