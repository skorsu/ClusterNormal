fmm_rcpp(10, c(2, 3), 5, a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = c(1, 1))
fmm_rcpp(10, c(2, 3), 5, a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = c(1, 1))
Rcpp::sourceCpp("src/main.cpp")
fmm_rcpp(10, c(2, 3), 5, a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = c(1, 1))
test_result <- fmm_rcpp(iter = 10000, y = c(2, 3), K_max = 5,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = c(1, 1))
test_result
test_result$mu
test_result$mu[, 1]
hist(test_result$mu[, 1])
hist(test_result$mu[, 2])
hist(test_result$mu[, 3])
hist(rnorm(10000, 0, sqrt(100)))
hist(rnorm(10000, 0, sqrt(100)))
qqplot(test_result$mu[, 3], rnorm(10000, 0, sqrt(100)))
hist(test_result$mu)
hist(test_result$sigma2)
qqplot(test_result$sigma2, rnorm(10000, 0, sqrt(100)))
abline(0, 1)
qqplot(test_result$sigma2, 1/rgamma(100000, 1, 1))
abline(0, 1)
qqplot(test_result$sigma2, 1/rgamma(10000, 1, 1))
abline(0, 1)
std::cout << "an: " << an << std::endl;
Rcpp::sourceCpp("src/main.cpp")
set.seed(31807)
ci_true <- rep(1:3, 10)
dat <- rnorm(30, c(10, 20, 30)[ci_true], 1)
test_result <- fmm_rcpp(iter = 1, y = dat, K_max = 5,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = ci_true)
test_result
Rcpp::sourceCpp("src/main.cpp")
set.seed(31807)
ci_true <- rep(1:3, 10)
dat <- rnorm(30, c(10, 20, 30)[ci_true], 1)
test_result <- fmm_rcpp(iter = 1, y = dat, K_max = 5,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = ci_true)
test_result
set.seed(31807)
ci_true <- rep(1:3, 10)
dat <- rnorm(30, c(10, 20, 30)[ci_true], 1)
test_result <- fmm_rcpp(iter = 10000, y = dat, K_max = 5,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = ci_true)
test_result$mu
hist(test_result$mu[, 1])
hist(test_result$mu[, 2])
hist(test_result$mu[, 3])
hist(test_result$mu[, 4])
hist(test_result$mu[, 5])
hist(test_result$mu[-c(1:7500), 5])
hist(test_result$mu[-c(1:7500), 4])
apply(test_result$mu[-c(1:7500), ], 2, mean)
apply(test_result$sigma2[-c(1:7500), ], 2, mean)
hist(test_result$sigma2[-c(1:7500), 3])
hist(test_result$sigma2[-c(1:7500), 2])
hist(test_result$sigma2[-c(1:7500), 1])
plot(test_result$sigma2[-c(1:7500), 1])
plot(test_result$sigma2[-c(1:7500), 1], type = "l")
plot(test_result$sigma2[-c(1:7500), 2], type = "l")
plot(test_result$sigma2[-c(1:7500), 3], type = "l")
plot(test_result$sigma2[-c(1:7500), 4], type = "l")
set.seed(31807)
ci_true <- rep(1:3, 10)
dat <- rnorm(30, c(10, 20, 30)[ci_true], 1)
test_result <- fmm_rcpp(iter = 1, y = dat, K_max = 5,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = ci_true)
test_result
Rcpp::sourceCpp("src/main.cpp")
set.seed(31807)
ci_true <- rep(1:3, 10)
dat <- rnorm(30, c(10, 20, 30)[ci_true], 1)
test_result <- fmm_rcpp(iter = 1, y = dat, K_max = 5,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = ci_true)
Rcpp::sourceCpp("src/main.cpp")
set.seed(31807)
ci_true <- rep(1:3, 10)
dat <- rnorm(30, c(10, 20, 30)[ci_true], 1)
test_result <- fmm_rcpp(iter = 1, y = dat, K_max = 5,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = ci_true)
test_result
Rcpp::sourceCpp("src/main.cpp")
set.seed(31807)
ci_true <- rep(1:3, 10)
dat <- rnorm(30, c(10, 20, 30)[ci_true], 1)
test_result <- fmm_rcpp(iter = 1, y = dat, K_max = 5,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = ci_true)
test_result
Rcpp::sourceCpp("src/main.cpp")
Rcpp::sourceCpp("src/main.cpp")
set.seed(31807)
ci_true <- rep(1:3, 10)
dat <- rnorm(30, c(10, 20, 30)[ci_true], 1)
test_result <- fmm_rcpp(iter = 1, y = dat, K_max = 5,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = ci_true)
test_result
Rcpp::sourceCpp("src/main.cpp")
set.seed(31807)
ci_true <- rep(1:3, 10)
dat <- rnorm(30, c(10, 20, 30)[ci_true], 1)
test_result <- fmm_rcpp(iter = 1, y = dat, K_max = 5,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = ci_true)
test_result
test_result <- fmm_rcpp(iter = 1, y = dat, K_max = 5,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = ci_true)
test_result
test_result <- fmm_rcpp(iter = 1, y = dat, K_max = 5,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = ci_true)
test_result
Rcpp::sourceCpp("src/main.cpp")
test_result <- fmm_rcpp(iter = 1, y = dat, K_max = 5,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = ci_true)
test_result$assign_mat
test_result <- fmm_rcpp(iter = 10000, y = dat, K_max = 5,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = ci_true)
test_result$assign_mat
salso(test_result$assign_mat)
salso(test_result$assign_mat[-c(1:9000, )]]
salso(test_result[-c(1:7500), ])
salso(test_result$assign_mat[-c(1:7500), ])
salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = 5)
ci_true <- rep(1:3, 10)
dat <- rnorm(30, c(10, 20, 30)[ci_true], 1)
test_result <- fmm_rcpp(iter = 10000, y = dat, K_max = 5,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = ci_true)
salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = 5)
ci_true <- rep(1:3, 10)
dat <- rnorm(30, c(10, 20, 30)[ci_true], 1)
test_result <- fmm_rcpp(iter = 10000, y = dat, K_max = 5,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = ci_true)
salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = 5)
test_result$mu[-c(1:7500), ]
plot(test_result$mu[-c(1:7500), 2])
plot(test_result$mu[-c(1:7500), 2], type = "l")
ci_true <- rep(1:3, 10)
dat <- rnorm(30, c(10, 20, 30)[ci_true], 1)
test_result <- fmm_rcpp(iter = 10000, y = dat, K_max = 5,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, 30))
salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = 5)
plot(test_result$mu[-c(1:7500), 2], type = "l")
table(salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = 5), ci_true)
test_result <- fmm_rcpp(iter = 10000, y = dat, K_max = 10,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, 30))
salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = 10)
table(salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = 5), ci_true)
Rcpp::sourceCpp("src/main.cpp")
set.seed(31807)
ci_true <- rep(1:5, 10)
dat <- rnorm(50, c(0, 7.5, 15, 25, 35)[ci_true], 1)
set.seed(31807)
ci_true <- rep(1:5, 10)
dat <- rnorm(50, c(0, 7.5, 15, 25, 35)[ci_true], 1)
test_result <- fmm_rcpp(iter = 10000, y = dat, K_max = 10,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, 50))
salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = 10)
table(salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = 5), ci_true)
plot(test_result$mu[-c(1:7500), 2], type = "l")
Rcpp::sourceCpp("src/main.cpp")
ci_true <- rep(1:5, 10)
dat <- rnorm(50, c(0, 7.5, 15, 25, 35)[ci_true], 1)
test_result <- fmm_rcpp(iter = 10000, y = dat, K_max = 10,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, 50))
salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = 10)
table(salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = 5), ci_true)
plot(test_result$mu[-c(1:7500), 2], type = "l")
plot(test_result$mu[-c(1:7500), 3], type = "l")
test_result$mu[500:505, ]
Rcpp::sourceCpp("src/main.cpp")
ci_true <- rep(1:5, 10)
dat <- rnorm(50, c(0, 7.5, 15, 25, 35)[ci_true], 1)
test_result <- fmm_rcpp(iter = 10000, y = dat, K_max = 10,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, 50))
test_result$mu[500:505, ]
salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = 10)
table(salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = 5), ci_true)
table(salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = 10), ci_true)
plot(test_result$mu[-c(1:7500), 3], type = "l")
set.seed(31807)
ci_true <- rep(1:5, 10)
dat <- rnorm(50, c(0, 7.5, 15, 25, 35)[ci_true], 1)
test_result <- fmm_rcpp(iter = 10000, y = dat, K_max = 5,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, 50))
table(salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = 5), ci_true)
plot(test_result$mu[-c(1:7500), 3], type = "l")
plot(test_result$mu[-c(1:7500), 4], type = "l")
plot(test_result$mu[-c(1:7500), 5], type = "l")
plot(test_result$mu[-c(1:7500), 1], type = "l")
plot(test_result$mu[-c(1:7500), 2], type = "l")
### Required Commands for building the packages: -------------------------------
uninstall()
compileAttributes()
build()
install()
library(ClusterNormal)
### Data Simulation: (1)
set.seed(1843)
N <- 500
K <- 3
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(10, 20, 30)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
### Data Simulation: (1)
set.seed(1843)
N <- 500
K <- 3
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(10, 20, 30)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
### Data Simulation: (1)
set.seed(1843)
N <- 500
K <- 3
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(10, 20, 30)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
### Run the model: (1)
test_result <- fmm_rcpp(iter = 10000, y = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(0, N))
### salso result: (1)
table(salso(test_result$assign_mat[-c(1:1000), ], maxNClusters = K), ci_true)
### Data Simulation: (1)
set.seed(1843)
N <- 500
K <- 3
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(10, 20, 30)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
### Run the model: (1)
test_result <- fmm_rcpp(iter = 10000, y = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(0, N))
### salso result: (1)
table(salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = K), ci_true)
apply(test_result$mu[-c(1:1000), ], 2, mean)
apply(test_result$sigma2[-c(1:1000), ], 2, mean)
apply(test_result$mu[-c(1:7500), ], 2, mean)
apply(test_result$sigma2[-c(1:7500), ], 2, mean)
plot(test_result$mu[-c(1:7500), 1], type = "l", ylim = c(7.5, 32.5),
col = "red", main = "mu", ylab = "mu", xlab = "iteration")
lines(1:7500, test_result$mu[-c(1:1000), 2], col = "blue")
plot(test_result$mu[-c(1:7500), 1], type = "l", ylim = c(7.5, 32.5),
col = "red", main = "mu", ylab = "mu", xlab = "iteration")
lines(1:2500, test_result$mu[-c(1:7500), 2], col = "blue")
lines(1:2500, test_result$mu[-c(1:7500), 3], col = "salmon")
plot(test_result$s2_mat[-c(1:7500), 1], type = "l", ylim = c(0, 3),
col = "red", main = "s2", ylab = "s2", xlab = "iteration")
plot(test_result$s2[-c(1:7500), 1], type = "l", ylim = c(0, 3),
col = "red", main = "s2", ylab = "s2", xlab = "iteration")
plot(test_result$sigma2[-c(1:7500), 1], type = "l", ylim = c(0, 3),
col = "red", main = "s2", ylab = "s2", xlab = "iteration")
lines(1:2500, test_result$sigma2[-c(1:7500), 2], col = "blue")
lines(1:2500, test_result$sigma2[-c(1:7500), 3], col = "salmon")
library(rbenchmark)
install.packages("rbenchmark")
library(rbenchmark)
benchmark("R" = {fmm_model_R(iter = 10000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, N))},
"Rcpp" = {fmm_rcpp(iter = 10000, y = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(0, N))},
replications = 50,
columns = c("test", "replications", "elapsed",
"relative", "user.self", "sys.self"))
### Import the function from the other file
source("/Users/kevinkvp/Desktop/Github Repo/ClusterNormal/Other/fmm_R.R")
### Data Simulation: (1)
set.seed(1843)
N <- 500
K <- 3
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(10, 20, 30)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
### Run the model: (1)
test_result <- fmm_rcpp(iter = 10000, y = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(0, N))
### salso result: (1)
table(salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = K), ci_true)
apply(test_result$mu[-c(1:7500), ], 2, mean)
apply(test_result$sigma2[-c(1:7500), ], 2, mean)
plot(test_result$mu[-c(1:7500), 1], type = "l", ylim = c(7.5, 32.5),
col = "red", main = "mu", ylab = "mu", xlab = "iteration")
lines(1:2500, test_result$mu[-c(1:7500), 2], col = "blue")
lines(1:2500, test_result$mu[-c(1:7500), 3], col = "salmon")
plot(test_result$sigma2[-c(1:7500), 1], type = "l", ylim = c(0, 3),
col = "red", main = "s2", ylab = "s2", xlab = "iteration")
lines(1:2500, test_result$sigma2[-c(1:7500), 2], col = "blue")
lines(1:2500, test_result$sigma2[-c(1:7500), 3], col = "salmon")
benchmark("R" = {fmm_model_R(iter = 10000, dat = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(1, N))},
"Rcpp" = {fmm_rcpp(iter = 10000, y = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(0, N))},
replications = 50,
columns = c("test", "replications", "elapsed",
"relative", "user.self", "sys.self"))
set.seed(352)
registerDoParallel(detectCores() - 1)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(bmixture)
library(mclustcomp)
library(ClusterNormal)
library(salso)
library(foreach)
library(doParallel)
library(doRNG)
set.seed(352)
registerDoParallel(detectCores() - 1)
list_result <- foreach(i = 1:10) %dorng%{
N <- 500
K <- 3
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(10, 20, 30)[ci_true], 1)
test_result <- fmm_rcpp(iter = 10000, y = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(0, N))
return(list(clus_assign = test_result$assign_mat, ci_true = ci_true))
}
stopImplicitCluster()
jac_vec <- rep(NA, 10)
for(i in 1:10){
ci_assign <- as.numeric(salso(list_result[[i]]$clus_assign[-c(1:7500), ],
maxNClusters = K))
jac_vec[i] <- mclustcomp(ci_assign, list_result[[i]]$ci_true, "jaccard")$score
}
mean(jac_vec)
sd(jac_vec)
### Data Simulation: (2)
set.seed(12441)
N <- 500
K <- 3
ci_true <- sample(1:K, N, replace = TRUE, prob = c(0.25, 0.35, 0.4))
dat_sim <- rnorm(N, c(7, 12, 17)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
### Run the model: (2)
test_result <- fmm_rcpp(iter = 10000, y = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(0, N))
### salso result: (2)
table(salso(test_result$assign_mat[-c(1:1000), ], maxNClusters = K), ci_true)
### Data Simulation: (2)
set.seed(12441)
N <- 500
K <- 3
ci_true <- sample(1:K, N, replace = TRUE, prob = c(0.25, 0.35, 0.4))
dat_sim <- rnorm(N, c(7, 12, 17)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
### Run the model: (2)
test_result <- fmm_rcpp(iter = 10000, y = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(0, N))
### salso result: (2)
table(salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = K), ci_true)
apply(test_result$mu[-c(1:7500), ], 2, mean)
apply(test_result$sigma2[-c(1:7500), ], 2, mean)
plot(test_result$mu[-c(1:7500), 1], type = "l", ylim = c(5, 20),
col = "red", main = "mu", ylab = "mu", xlab = "iteration")
lines(1:2500, test_result$mu[-c(1:7500), 2], col = "blue")
lines(1:2500, test_result$mu[-c(1:7500), 3], col = "salmon")
plot(test_result$sigma2[-c(1:7500), 1], type = "l", ylim = c(0, 3),
col = "red", main = "s2", ylab = "s2", xlab = "iteration")
lines(1:2500, test_result$sigma2[-c(1:7500), 2], col = "blue")
lines(1:2500, test_result$sigma2[-c(1:7500), 3], col = "salmon")
set.seed(352)
registerDoParallel(detectCores() - 1)
list_result <- foreach(i = 1:10) %dorng%{
N <- 500
K <- 3
ci_true <- sample(1:K, N, replace = TRUE, prob = c(0.25, 0.35, 0.4))
dat_sim <- rnorm(N, c(7, 12, 17)[ci_true], 1)
test_result <- fmm_rcpp(iter = 10000, y = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(0, N))
return(list(clus_assign = test_result$assign_mat, ci_true = ci_true))
}
stopImplicitCluster()
jac_vec <- rep(NA, 10)
for(i in 1:10){
ci_assign <- as.numeric(salso(list_result[[i]]$clus_assign[-c(1:7500), ],
maxNClusters = K))
jac_vec[i] <- mclustcomp(ci_assign, list_result[[i]]$ci_true, "jaccard")$score
}
mean(jac_vec)
sd(jac_vec)
### Data Simulation: (3)
set.seed(12441)
N <- 500
K <- 5
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(0, 7.5, 15, 25, 35)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
### Run the model: (3)
test_result <- fmm_rcpp(iter = 10000, y = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(0, N))
### salso result: (3)
table(salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = K), ci_true)
plot(test_result$mu[-c(1:7500), 1], type = "l", ylim = c(-5, 50),
col = "red", main = "mu", ylab = "mu", xlab = "iteration")
lines(1:2500, test_result$mu[-c(1:7500), 2], col = "blue")
lines(1:2500, test_result$mu[-c(1:7500), 3], col = "salmon")
lines(1:2500, test_result$mu[-c(1:7500), 4], col = "green")
lines(1:2500, test_result$mu[-c(1:7500), 5], col = "grey")
plot(test_result$sigma2[-c(1:7500), 1], type = "l", ylim = c(-5, 50),
col = "red", main = "mu", ylab = "mu", xlab = "iteration")
lines(1:2500, test_result$sigma2[-c(1:7500), 2], col = "blue")
lines(1:2500, test_result$sigma2[-c(1:7500), 3], col = "salmon")
lines(1:2500, test_result$sigma2[-c(1:7500), 4], col = "green")
lines(1:2500, test_result$sigma2[-c(1:7500), 5], col = "grey")
plot(test_result$sigma2[-c(1:7500), 1], type = "l", ylim = c(0, 15),
col = "red", main = "mu", ylab = "mu", xlab = "iteration")
lines(1:2500, test_result$sigma2[-c(1:7500), 2], col = "blue")
lines(1:2500, test_result$sigma2[-c(1:7500), 3], col = "salmon")
lines(1:2500, test_result$sigma2[-c(1:7500), 4], col = "green")
lines(1:2500, test_result$sigma2[-c(1:7500), 5], col = "grey")
set.seed(352)
registerDoParallel(detectCores() - 1)
list_result <- foreach(i = 1:10) %dorng%{
N <- 500
K <- 5
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(0, 7.5, 15, 25, 35)[ci_true], 1)
test_result <- fmm_rcpp(iter = 10000, y = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(0, N))
return(list(clus_assign = test_result$assign_mat, ci_true = ci_true))
}
stopImplicitCluster()
jac_vec <- rep(NA, 10)
for(i in 1:10){
ci_assign <- as.numeric(salso(list_result[[i]]$clus_assign[-c(1:4000), ],
maxNClusters = K))
jac_vec[i] <- mclustcomp(ci_assign, list_result[[i]]$ci_true, "jaccard")$score
}
mean(jac_vec)
sd(jac_vec)
jac_vec <- rep(NA, 10)
for(i in 1:10){
ci_assign <- as.numeric(salso(list_result[[i]]$clus_assign[-c(1:7500), ],
maxNClusters = K))
jac_vec[i] <- mclustcomp(ci_assign, list_result[[i]]$ci_true, "jaccard")$score
}
mean(jac_vec)
sd(jac_vec)
### Data Simulation: (3)
set.seed(12441)
N <- 500
K <- 5
ci_true <- sample(1:K, N, replace = TRUE)
dat_sim <- rnorm(N, c(0, 7.5, 15, 25, 35)[ci_true], 1)
ggplot(data.frame(x = dat_sim, ci_true), aes(x = x, fill = factor(ci_true))) +
geom_histogram(bins = 100) +
theme_bw()
### Run the model: (3)
test_result <- fmm_rcpp(iter = 10000, y = dat_sim, K_max = K,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(0, N))
### salso result: (3)
table(salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = K), ci_true)
### Run the model: (3)
test_result <- fmm_rcpp(iter = 10000, y = dat_sim, K_max = 8,
a0 = 1, b0 = 1, mu0 = 0, s20 = 100, xi0 = 1,
ci_init = rep(0, N))
### salso result: (3)
table(salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = K), ci_true)
### salso result: (3)
table(salso(test_result$assign_mat[-c(1:7500), ], maxNClusters = 8), ci_true)
